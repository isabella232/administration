// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the compiled template should stay the same even after removing duplicate blocks sw-admin-menu-item 1`] = `
"<li
    v-if=\\"showMenuItem\\"
    class=\\"sw-admin-menu__navigation-list-item\\"
    :class=\\"getElementClasses(entry.id || entryPath)\\"
    :style=\\"{ 'border-color': borderColor }\\"
    @click.prevent=\\"$emit('menu-item-click', entry, $event.target)\\"
    @mouseenter=\\"$emit('menu-item-enter', entry, $event, parentEntries)\\"
>

        <router-link
        v-if=\\"entryPath\\"
        class=\\"sw-admin-menu__navigation-link\\"
        :class=\\"{'router-link-active': subIsActive(entryPath)}\\"
        :to=\\"getLinkToProp\\"
    >

                <sw-icon
            v-if=\\"displayIcon\\"
            :size=\\"iconSize\\"
            class=\\"sw-admin-menu__navigation-link-icon\\"
            :name=\\"getIconName(entry.icon)\\"
            :style=\\"{ 'color': entry.color }\\"
        />
        
                <span
            class=\\"sw-admin-menu__navigation-link-label\\"
            :class=\\"collapsibleText ? 'collapsible-text' : ''\\"
        >
            {{ getEntryLabel }}
        </span>
        
                <sw-icon
            v-if=\\"entry.level > 1 && entry.children.length\\"
            name=\\"default-arrow-head-right\\"
            size=\\"8\\"
            class=\\"sw-admin-menu__navigation-link-icon-arrow\\"
        />
        
        <slot name=\\"additional-text\\"></slot>
    </router-link>
    
        <a
        v-else-if=\\"entry.link\\"
        :href=\\"entry.link\\"
        :target=\\"entry.target\\"
        :title=\\"$tc(entry.label)\\"
        class=\\"sw-admin-menu__navigation-link\\"
    >

                <sw-icon
            v-if=\\"displayIcon\\"
            :size=\\"iconSize\\"
            class=\\"sw-admin-menu__navigation-link-icon\\"
            :name=\\"getIconName(entry.icon)\\"
            :style=\\"{ 'color': entry.color }\\"
        />
        
                <span
            class=\\"sw-admin-menu__navigation-link-label\\"
            :class=\\"collapsibleText ? 'collapsible-text' : ''\\"
        >
            {{ getEntryLabel }}
        </span>
        
                <sw-icon
            v-if=\\"entry.level > 1 && entry.children.length\\"
            name=\\"default-arrow-head-right\\"
            size=\\"8\\"
            class=\\"sw-admin-menu__navigation-link-icon-arrow\\"
        />
        
        <slot name=\\"additional-text\\"></slot>
    </a>
    
        <span
        v-else
        class=\\"sw-admin-menu__navigation-link\\"
        :class=\\"{ 'router-link-active': subIsActive(entry.id) }\\"
    >

                <sw-icon
            v-if=\\"displayIcon\\"
            :size=\\"iconSize\\"
            class=\\"sw-admin-menu__navigation-link-icon\\"
            :name=\\"getIconName(entry.icon)\\"
            :style=\\"{ 'color': entry.color }\\"
        />
        
                <span
            class=\\"sw-admin-menu__navigation-link-label\\"
            :class=\\"collapsibleText ? 'collapsible-text' : ''\\"
        >
            {{ getEntryLabel }}
        </span>
        
        <slot name=\\"additional-text\\"></slot>

                <sw-icon
            v-if=\\"entry.level > 1 && entry.children.length\\"
            name=\\"default-arrow-head-right\\"
            size=\\"8\\"
            class=\\"sw-admin-menu__navigation-link-icon-arrow\\"
        />
            </span>
    
        <ul
        v-if=\\"children.length > 0\\"
        class=\\"sw-admin-menu__sub-navigation-list\\"
    >
        <template v-for=\\"entry in children\\">
            <li
                v-if=\\"isFirstPluginInMenuEntries(entry, children)\\"
                :key=\\"getCustomKey(entry.id || entryPath + '-separator')\\"
                :style=\\"{ 'border-color': borderColor }\\"
                class=\\"sw-admin-menu__separator\\"
            >
                <span class=\\"sw-admin-menu__separator-line\\"></span>
            </li>

            <sw-admin-menu-item
                :key=\\"getCustomKey(entry.id || entryPath)\\"
                :entry=\\"entry\\"
                :border-color=\\"borderColor\\"
                :display-icon=\\"false\\"
                @menu-item-enter=\\"onSubMenuItemEnter\\"
            />
        </template>
    </ul>
    </li>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-cms-layout-modal 1`] = `
"<sw-modal
    class=\\"sw-cms-layout-modal\\"
    :title=\\"$tc('sw-cms.components.cmsLayoutModal.modalTitle')\\"
    @modal-close=\\"closeModal\\"
>

        <div class=\\"sw-cms-layout-modal__header\\">

                <div class=\\"sw-cms-layout-modal__header-title\\">
            {{ headline ? headline : $tc('sw-cms.components.cmsLayoutModal.headline') }}
        </div>
        
                <sw-simple-search-field
            class=\\"sw-cms-layout-modal__header-search\\"
            :placeholder=\\"$tc('sw-cms.general.placeholderSearchBar')\\"
            @search-term-change=\\"onSearch\\"
        />
        
    </div>
    
        <div class=\\"sw-cms-layout-modal__content\\">

                <sw-loader v-if=\\"isLoading\\" />
        
                <sw-container
            v-else
            columns=\\"repeat(auto-fill, minmax(250px, 1fr))\\"
            gap=\\"24px\\"
        >

                        <div
                v-for=\\"(cmsPage, index) in pages\\"
                :key=\\"index\\"
                class=\\"sw-cms-layout-modal__content-item\\"
                :class=\\"[{ 'is--selected': cmsPage.id === selected }, 'sw-cms-layout-modal__content-item--' + index]\\"
            >
                
                                
                <sw-checkbox-field
                    :value=\\"cmsPage.id === selected\\"
                    type=\\"checkbox\\"
                    @change=\\"onSelection(cmsPage.id, cmsPage)\\"
                />
                
                                
                <sw-cms-list-item
                    :key=\\"cmsPage.id\\"
                    :page=\\"cmsPage\\"
                    @item-click=\\"selectItem(cmsPage.id, cmsPage)\\"
                />
                
                            </div>
                    </sw-container>
            </div>
    
        <template slot=\\"modal-footer\\">
        <sw-button @click=\\"closeModal\\">
            {{ $tc('sw-cms.components.cmsLayoutModal.actionCancel') }}
        </sw-button>
        <sw-button
            variant=\\"primary\\"
            @click=\\"selectLayout\\"
        >
            {{ $tc('sw-cms.components.cmsLayoutModal.actionConfirm') }}
        </sw-button>
    </template>
    
</sw-modal>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-cms-section 1`] = `
"<div
    class=\\"sw-cms-section\\"
    :class=\\"[sectionClasses, customSectionClass, sectionTypeClass]\\"
>

        <sw-cms-section-actions
        :section=\\"section\\"
        :disabled=\\"disabled\\"
    />
    
    <div
        class=\\"sw-cms-section__wrapper\\"
        :style=\\"sectionStyles\\"
    >
                <div
            v-if=\\"isSideBarType\\"
            class=\\"sw-cms-section__sidebar\\"
            :class=\\"sectionSidebarClasses\\"
        >

            <template v-if=\\"sideBarEmpty\\">
                                <div
                    v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(blockCount, 'sidebar') }\\"
                    class=\\"sw-cms-section__empty-stage\\"
                    @click=\\"openBlockBar\\"
                >

                    <sw-icon
                        name=\\"default-basic-plus-circle\\"
                        size=\\"24\\"
                    />
                    <p>{{ $tc('sw-cms.detail.label.addBlocks') }}</p>
                </div>
                            </template>

            <template v-else>

                                <sw-cms-stage-add-block
                    v-if=\\"isSystemDefaultLanguage && !disabled\\"
                    :key=\\"0\\"
                    v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(0, 'sidebar') }\\"
                    @stage-block-add=\\"onAddSectionBlock\\"
                />
                
                <template v-for=\\"(block, index) in sideBarBlocks\\">
                                        <sw-cms-block
                        :key=\\"block.id\\"
                        class=\\"sw-cms-stage-block\\"
                        :block=\\"block\\"
                        :disabled=\\"disabled\\"
                        :active=\\"selectedBlock !== null && selectedBlock.id === block.id\\"
                        @block-overlay-click=\\"onBlockSelection(block)\\"
                    >

                                                <component :is=\\"\`sw-cms-block-\${block.type}\`\\">
                                                        <sw-cms-slot
                                v-for=\\"el in block.slots\\"
                                :slot=\\"el.slot\\"
                                :key=\\"el.id\\"
                                :element=\\"el\\"
                                :disabled=\\"disabled\\"
                                :active=\\"selectedBlock !== null && selectedBlock.id === block.id\\"
                            />
                                                    </component>
                                            </sw-cms-block>
                    
                                        <sw-cms-stage-add-block
                        v-if=\\"isSystemDefaultLanguage && !disabled\\"
                        :key=\\"index + 1\\"
                        v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(block.position + 1, 'sidebar') }\\"
                        @stage-block-add=\\"onAddSectionBlock\\"
                    />
                                    </template>
            </template>
        </div>
        
                <div
            class=\\"sw-cms-section__content\\"
            :class=\\"{ 'is--empty': mainContentEmpty }\\"
        >
            <template v-if=\\"mainContentEmpty\\">
                                <div
                    v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(blockCount, 'main') }\\"
                    class=\\"sw-cms-section__empty-stage\\"
                    @click=\\"openBlockBar\\"
                >

                    <sw-icon
                        name=\\"default-basic-plus-circle\\"
                        size=\\"24\\"
                    />
                    <p>{{ $tc('sw-cms.detail.label.addBlocks') }}</p>
                </div>
                            </template>

            <template v-else>

                                <sw-cms-stage-add-block
                    v-if=\\"isSystemDefaultLanguage && !disabled\\"
                    :key=\\"0\\"
                    v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(0) }\\"
                    @stage-block-add=\\"onAddSectionBlock\\"
                />
                
                <template v-for=\\"(block, index) in mainContentBlocks\\">
                                        <sw-cms-block
                        :key=\\"block.id\\"
                        class=\\"sw-cms-stage-block\\"
                        :disabled=\\"disabled\\"
                        :block=\\"block\\"
                        :active=\\"selectedBlock !== null && selectedBlock.id === block.id\\"
                        @block-overlay-click=\\"onBlockSelection(block)\\"
                    >

                                                <component :is=\\"\`sw-cms-block-\${block.type}\`\\">
                                                        <sw-cms-slot
                                v-for=\\"el in block.slots\\"
                                :slot=\\"el.slot\\"
                                :key=\\"el.id\\"
                                :element=\\"el\\"
                                :disabled=\\"disabled\\"
                                :active=\\"selectedBlock !== null && selectedBlock.id === block.id\\"
                            />
                                                    </component>
                                            </sw-cms-block>
                    
                                        <sw-cms-stage-add-block
                        v-if=\\"isSystemDefaultLanguage && !disabled\\"
                        :key=\\"index + 1\\"
                        v-droppable=\\"{ dragGroup: 'cms-stage', data: getDropData(block.position + 1) }\\"
                        @stage-block-add=\\"onAddSectionBlock\\"
                    />
                                    </template>
            </template>
        </div>
            </div>
</div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-condition-cart-amount 1`] = `
"<div class=\\"sw-condition\\">
        <div
        class=\\"sw-condition__container\\"
        :class=\\"conditionClasses\\"
    >
                <sw-condition-type-select
            v-bind=\\"{ condition, availableTypes, hasError }\\"
            :disabled=\\"disabled\\"
        />
        
        <div class=\\"sw-condition-cart-amount sw-condition__condition-value\\">
        <sw-condition-operator-select
        v-bind=\\"{ operators, condition }\\"
        :disabled=\\"disabled\\"
    />
    
        <sw-number-field
        v-model=\\"amount\\"
        :min=\\"0\\"
        :digits=\\"20\\"
        size=\\"medium\\"
        :disabled=\\"disabled\\"
    />
    </div>

                <sw-context-button
            class=\\"sw-condition__context-button\\"
            :disabled=\\"disabled\\"
        >
                        <sw-context-menu-item
                class=\\"sw-condition__create-before-action\\"
                :disabled=\\"disabled\\"
                @click=\\"onCreateBefore\\"
            >
                {{ $tc('global.sw-condition.condition.createBefore') }}
            </sw-context-menu-item>
            
                        <sw-context-menu-item
                class=\\"sw-condition__create-after-action\\"
                :disabled=\\"disabled\\"
                @click=\\"onCreateAfter\\"
            >
                {{ $tc('global.sw-condition.condition.createAfter') }}
            </sw-context-menu-item>
            
                        <sw-context-menu-item
                :disabled=\\"disabled\\"
                variant=\\"danger\\"
                @click=\\"onDeleteCondition\\"
            >
                {{ $tc('global.default.delete') }}
            </sw-context-menu-item>
                    </sw-context-button>
            </div>
    
        <sw-field-error :error=\\"currentError\\" />
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-context-menu-item 1`] = `
"<router-link
    v-if=\\"routerLink\\"
    :to=\\"routerLink\\"
    class=\\"sw-context-menu-item\\"
    :class=\\"contextMenuItemStyles\\"
    :disabled=\\"disabled\\"
    :event=\\"disabled ? null : 'click'\\"
    :target=\\"disabled ? null : target\\"
    v-on=\\"contextListeners\\"
>
        <slot name=\\"icon\\">
                <sw-icon
            v-if=\\"icon\\"
            :name=\\"icon\\"
            small
        />
            </slot>
    
        <span
        class=\\"sw-context-menu-item__text\\"
        :class=\\"{ 'is--disabled': disabled }\\"
    >
        <slot></slot>
    </span>
    </router-link>

<div
    v-else
    class=\\"sw-context-menu-item\\"
    :class=\\"contextMenuItemStyles\\"
    v-on=\\"contextListeners\\"
>
        <slot name=\\"icon\\">
                <sw-icon
            v-if=\\"icon\\"
            :name=\\"icon\\"
            small
        />
            </slot>
    
        <span
        class=\\"sw-context-menu-item__text\\"
        :class=\\"{ 'is--disabled': disabled }\\"
    >
        <slot></slot>
    </span>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-customer-detail-addresses 1`] = `
"<div class=\\"sw-customer-detail-addresses\\">

        <sw-card
        :is-loading=\\"isLoading\\"
        :large=\\"true\\"
    >
                <template #toolbar>
            <sw-card-filter
                placeholder=\\"\\"
                @sw-card-filter-term-change=\\"onChange\\"
            >
                <template #filter>
                                        <sw-button
                        class=\\"sw-customer-detail-addresses__add-address-action\\"
                        :disabled=\\"!customerEditMode\\"
                        size=\\"small\\"
                        @click=\\"onCreateNewAddress\\"
                    >
                        <sw-icon
                            name=\\"small-default-plus-circle\\"
                            small
                        />
                        {{ $tc('sw-customer.detailAddresses.buttonAddAddress') }}
                    </sw-button>
                                    </template>
            </sw-card-filter>
        </template>
        
                <sw-modal
            v-if=\\"currentAddress\\"
            :title=\\"$tc('sw-customer.detailAddresses.modalTitleAddress')\\"
            @modal-close=\\"onCloseAddressModal\\"
        >

                        <sw-customer-address-form
                :address=\\"currentAddress\\"
                :customer=\\"activeCustomer\\"
            >

                <sw-customer-address-form-options
                    :address=\\"currentAddress\\"
                    :customer=\\"activeCustomer\\"
                    :custom-field-sets=\\"customerAddressCustomFieldSets\\"
                    @default-address-change=\\"onChangeDefaultAddress\\"
                />

            </sw-customer-address-form>
            
                        <template #modal-footer>
                                <sw-button
                    size=\\"small\\"
                    @click=\\"onCloseAddressModal\\"
                >
                    {{ $tc('sw-customer.detailAddresses.buttonCancel') }}
                </sw-button>
                
                                <sw-button
                    variant=\\"primary\\"
                    size=\\"small\\"
                    @click=\\"onSaveAddress\\"
                >
                    {{ $tc('sw-customer.detailAddresses.buttonApply') }}
                </sw-button>
                            </template>
                    </sw-modal>
        
                <template #grid>
            <sw-one-to-many-grid
                ref=\\"addressGrid\\"
                :collection=\\"sortedAddresses\\"
                :local-mode=\\"false\\"
                :columns=\\"addressColumns\\"
                :show-selection=\\"false\\"
                :sort-direction=\\"addressSortDirection\\"
                :sort-by=\\"addressSortProperty\\"
                :is-loading=\\"isLoading\\"
                @column-sort=\\"setAddressSorting\\"
            >
                                                <template #column-defaultShippingAddress=\\"{ item }\\">
                    <sw-field
                        v-model=\\"activeCustomer.defaultShippingAddressId\\"
                        type=\\"radio\\"
                        :disabled=\\"!customerEditMode\\"
                        name=\\"defaultShippingAddress\\"
                        :options=\\"[{ value: item.id }]\\"
                        @change=\\"onChangeDefaultShippingAddress\\"
                    />
                </template>
                
                                <template #column-defaultBillingAddress=\\"{ item }\\">
                    <sw-field
                        v-model=\\"activeCustomer.defaultBillingAddressId\\"
                        type=\\"radio\\"
                        :disabled=\\"!customerEditMode\\"
                        name=\\"defaultBillingAddress\\"
                        :options=\\"[{ value: item.id }]\\"
                        @change=\\"onChangeDefaultBillingAddress\\"
                    />
                </template>
                
                                <template #column-lastName=\\"{ item }\\">
                    <a @click=\\"onEditAddress(item.id)\\">
                        {{ item.lastName }}
                    </a>
                </template>
                                
                                <template #actions=\\"{ item }\\">

                                        <sw-context-menu-item
                        :disabled=\\"!customerEditMode\\"
                        @click=\\"onEditAddress(item.id)\\"
                    >
                        {{ $tc('sw-customer.detailAddresses.contextMenuEdit') }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        :disabled=\\"!customerEditMode\\"
                        @click=\\"onDuplicateAddress(item.id)\\"
                    >
                        {{ $tc('sw-customer.detailAddresses.contextMenuDuplicate') }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        :disabled=\\"!customerEditMode\\"
                        @click=\\"onChangeDefaultShippingAddress(item.id)\\"
                    >
                        {{ $tc('sw-customer.detailAddresses.contextMenuDefaultShippingAddress') }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        :disabled=\\"!customerEditMode\\"
                        @click=\\"onChangeDefaultBillingAddress(item.id)\\"
                    >
                        {{ $tc('sw-customer.detailAddresses.contextMenuDefaultBillingAddress') }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        variant=\\"danger\\"
                        :disabled=\\"!customerEditMode || isDefaultAddress(item.id)\\"
                        @click=\\"onDeleteAddress(item.id)\\"
                    >
                        {{ $tc('sw-customer.detailAddresses.contextMenuDelete') }}
                    </sw-context-menu-item>
                                    </template>
                
                                <template #action-modals=\\"{ item }\\">
                                        <sw-modal
                        v-if=\\"showDeleteAddressModal === item.id\\"
                        :title=\\"$tc('global.default.warning')\\"
                        variant=\\"small\\"
                        @modal-close=\\"onCloseDeleteAddressModal\\"
                    >
                                                <p class=\\"sw-customer-detail-addresses__confirm-delete-text\\">
                            {{ $tc('sw-customer.detailAddresses.textDeleteAddressConfirm') }}
                        </p>
                        
                                                <sw-address
                            class=\\"sw-customer-detail-addresses__confirm-delete-address\\"
                            :address=\\"item\\"
                        />
                        
                                                <template #modal-footer>
                                                        <sw-button
                                size=\\"small\\"
                                @click=\\"onCloseDeleteAddressModal\\"
                            >
                                {{ $tc('sw-customer.detailAddresses.buttonCancel') }}
                            </sw-button>
                            
                                                        <sw-button
                                variant=\\"danger\\"
                                size=\\"small\\"
                                @click=\\"onConfirmDeleteAddress(item.id)\\"
                            >
                                {{ $tc('sw-customer.detailAddresses.buttonDelete') }}
                            </sw-button>
                                                    </template>
                                            </sw-modal>
                                    </template>
                            </sw-one-to-many-grid>
        </template>
            </sw-card>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-data-grid 1`] = `
"<div
    class=\\"sw-data-grid\\"
    :class=\\"classes\\"
>

        <div
        ref=\\"wrapper\\"
        class=\\"sw-data-grid__wrapper\\"
    >
                <div
            v-if=\\"selectionCount > 0\\"
            class=\\"sw-data-grid__bulk\\"
        >
                        <span class=\\"sw-data-grid__bulk-selected sw-data-grid__bulk-selected-label\\">{{ $tc('global.sw-data-grid.labelSelectionCount') }}</span>
            <span class=\\"sw-data-grid__bulk-selected sw-data-grid__bulk-selected-count\\">{{ selectionCount }}</span>
            
                        <span class=\\"sw-data-grid__bulk-selected bulk-link\\">
                <slot name=\\"bulk\\"></slot>
            </span>
                    </div>
        
                <slot name=\\"bulk-modals\\">
                    </slot>
        
                <table
            ref=\\"table\\"
            class=\\"sw-data-grid__table\\"
        >

                        <thead
                v-if=\\"showHeader\\"
                class=\\"sw-data-grid__header\\"
            >

                                <tr class=\\"sw-data-grid__row\\">

                                        <th
                        v-if=\\"showSelection\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--selection\\"
                    >
                                                <div class=\\"sw-data-grid__cell-content\\">
                                                        <sw-checkbox-field
                                v-if=\\"records && records.length > 0\\"
                                class=\\"sw-data-grid__select-all\\"
                                :value=\\"allSelectedChecked\\"
                                @change=\\"selectAll\\"
                            />
                                                    </div>
                                            </th>
                    
                                        <th
                        v-for=\\"(column, columnIndex) in currentColumns\\"
                        v-show=\\"column.visible\\"
                        :key=\\"\`\${column.property}-\${columnIndex}\`\\"
                        ref=\\"column\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--property\\"
                        :class=\\"getHeaderCellClasses(column, columnIndex)\\"
                        :style=\\"{ width: column.width, minWidth: column.width }\\"
                        @click=\\"onClickHeaderCell($event, column)\\"
                    >

                                                <div class=\\"sw-data-grid__cell-content\\">

                            <slot
                                :name=\\"\`column-label-\${column.property}\`\\"
                                v-bind=\\"{ column, columnIndex }\\"
                            >

                                                                <sw-icon
                                    v-if=\\"column.iconLabel\\"
                                    :name=\\"column.iconLabel\\"
                                >
                                    {{ $te(column.label) ? $tc(column.label) : column.label }}
                                </sw-icon>
                                
                                                                <template v-else>
                                    {{ $te(column.label) ? $tc(column.label) : column.label }}
                                </template>
                                                            </slot>

                                                        <sw-context-button
                                v-if=\\"allowColumnEdit && !isInlineEditActive\\"
                                class=\\"sw-data-grid__action-edit-column\\"
                            >
                                                                <sw-context-menu-item
                                    :disabled=\\"column.primary\\"
                                    variant=\\"danger\\"
                                    @click=\\"hideColumn(columnIndex)\\"
                                >
                                    {{ $tc('global.sw-data-grid.labelColumnHide') }}
                                </sw-context-menu-item>
                                                            </sw-context-button>
                            
                                                        <span
                                v-if=\\"column.sortable && currentSortBy === column.dataIndex\\"
                                class=\\"sw-data-grid__sort-indicator\\"
                            >
                                                                <transition
                                    name=\\"sort-indicator\\"
                                    mode=\\"out-in\\"
                                >
                                                                        <sw-icon
                                        v-if=\\"currentSortDirection === 'ASC'\\"
                                        key=\\"ASC\\"
                                        name=\\"small-arrow-small-up\\"
                                        size=\\"16px\\"
                                    />
                                    
                                                                        <sw-icon
                                        v-else
                                        key=\\"DESC\\"
                                        name=\\"small-arrow-small-down\\"
                                        size=\\"16px\\"
                                    />
                                                                    </transition>
                                                            </span>
                                                    </div>
                        
                                                <span
                            v-if=\\"column.allowResize\\"
                            class=\\"sw-data-grid__cell-resize\\"
                            @mousedown=\\"onStartResize($event, column, columnIndex)\\"
                        ></span>
                                            </th>
                    
                                        <th
                        v-if=\\"hasResizeColumns\\"
                        aria-hidden=\\"true\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell-spacer\\"
                    >
                        <div class=\\"sw-data-grid__cell-content\\"></div>
                    </th>
                    
                                        <th
                        v-if=\\"showActions\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--actions sw-data-grid__cell-settings\\"
                        :class=\\"{ 'is--loading': loading }\\"
                    >
                                                <div class=\\"sw-data-grid__cell-content\\">
                                                        <sw-data-grid-settings
                                v-if=\\"showSettings\\"
                                :columns=\\"currentColumns\\"
                                :compact=\\"compact\\"
                                :previews=\\"previews\\"
                                :enable-previews=\\"hasPreviewSlots\\"
                                :disabled=\\"isInlineEditActive\\"
                                @change-compact-mode=\\"onChangeCompactMode\\"
                                @change-preview-images=\\"onChangePreviews\\"
                                @change-column-visibility=\\"onChangeColumnVisibility\\"
                                @change-column-order=\\"onChangeColumnOrder\\"
                            >
                                                                <template #additionalSettings>
                                                                        <slot name=\\"additionalSettings\\"></slot>
                                                                    </template>
                                                            </sw-data-grid-settings>

                                                        <slot
                                v-if=\\"feature.isActive('FEATURE_NEXT_14114')\\"
                                name=\\"customSettings\\"
                            >
                                                            </slot>
                                                                                </div>
                                            </th>
                                    </tr>
                            </thead>
            
                        <tbody
                v-if=\\"!loading\\"
                class=\\"sw-data-grid__body\\"
            >

                                <tr
                    v-for=\\"(item, itemIndex) in records\\"
                    :key=\\"item.id\\"
                    class=\\"sw-data-grid__row\\"
                    :class=\\"getRowClasses(item, itemIndex)\\"
                >

                                        <td
                        v-if=\\"showSelection\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--selection\\"
                    >
                                                <div class=\\"sw-data-grid__cell-content\\">
                                                        <sw-checkbox-field
                                :disabled=\\"!isRecordSelectable(item)\\"
                                :value=\\"isSelected(item[itemIdentifierProperty])\\"
                                @change=\\"selectItem($event, item)\\"
                            />
                                                    </div>
                                            </td>
                    
                                        <td
                        v-for=\\"(column, columnIndex) in currentColumns\\"
                        v-show=\\"column.visible\\"
                        :key=\\"\`\${item.id}-\${columnIndex}\`\\"
                        class=\\"sw-data-grid__cell\\"
                        :class=\\"getCellClasses(column)\\"
                        @dblclick=\\"onDbClickCell(item)\\"
                    >

                                                <div class=\\"sw-data-grid__cell-content\\">

                                                        <slot
                                v-if=\\"previews && !isInlineEdit(item)\\"
                                :name=\\"\`preview-\${column.property}\`\\"
                                v-bind=\\"{ item, column, compact }\\"
                            ></slot>
                            
                                                        <slot
                                :name=\\"\`column-\${column.property}\`\\"
                                v-bind=\\"{ item, itemIndex, column, columnIndex, compact, isInlineEdit: (isInlineEdit(item) && column.hasOwnProperty('inlineEdit')) }\\"
                            >
                                <template v-if=\\"column.inlineEdit === 'boolean'\\">
                                                                        <sw-data-grid-column-boolean
                                        v-model=\\"item[column.property]\\"
                                        :is-inline-edit=\\"isInlineEdit(item) && column.hasOwnProperty('inlineEdit')\\"
                                    />
                                                                    </template>
                                <template v-else>
                                                                        <template v-if=\\"isInlineEdit(item) && column.hasOwnProperty('inlineEdit')\\">
                                                                                <sw-data-grid-inline-edit
                                            :column=\\"column\\"
                                            :compact=\\"compact\\"
                                            :value=\\"item[column.property]\\"
                                            @input=\\"item[column.property] = $event\\"
                                        />
                                                                            </template>
                                    
                                                                        <template v-else>
                                                                                <router-link
                                            v-if=\\"column.routerLink\\"
                                            class=\\"sw-data-grid__cell-value\\"
                                            :to=\\"{ name: column.routerLink, params: { id: item.id } }\\"
                                        >
                                            {{ renderColumn(item, column) }}
                                        </router-link>
                                                                                                                        <span
                                            v-else
                                            class=\\"sw-data-grid__cell-value\\"
                                        >
                                            {{ renderColumn(item, column) }}
                                        </span>
                                                                            </template>
                                                                    </template>
                            </slot>
                                                    </div>
                                            </td>
                    
                                        <td
                        v-if=\\"hasResizeColumns\\"
                        aria-hidden=\\"true\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell-spacer\\"
                        @dblclick=\\"onDbClickCell(item)\\"
                    >
                        <div class=\\"sw-data-grid__cell-content\\"></div>
                    </td>
                    
                                        <td
                        v-if=\\"showActions\\"
                        class=\\"sw-data-grid__cell sw-data-grid__cell--actions\\"
                    >
                                                <div class=\\"sw-data-grid__cell-content\\">

                                                        <template v-if=\\"isInlineEditActive && currentInlineEditId === item[itemIdentifierProperty]\\">

                                                                <sw-button
                                    class=\\"sw-data-grid__inline-edit-cancel\\"
                                    size=\\"x-small\\"
                                    :title=\\"$tc('global.default.cancel')\\"
                                    :aria-label=\\"$tc('global.default.cancel')\\"
                                    square
                                    @click=\\"onClickCancelInlineEdit(item)\\"
                                >
                                                                        <sw-icon
                                        name=\\"small-default-x-line-small\\"
                                        size=\\"14px\\"
                                    />
                                                                    </sw-button>
                                
                                                                <sw-button
                                    class=\\"sw-data-grid__inline-edit-save\\"
                                    variant=\\"primary\\"
                                    size=\\"x-small\\"
                                    :title=\\"$tc('global.default.save')\\"
                                    :aria-label=\\"$tc('global.default.save')\\"
                                    square
                                    @click=\\"onClickSaveInlineEdit(item)\\"
                                >
                                                                        <sw-icon
                                        name=\\"small-default-checkmark-line-small\\"
                                        size=\\"14px\\"
                                    />
                                                                    </sw-button>
                                                            </template>
                            
                                                        <sw-context-button
                                v-else
                                class=\\"sw-data-grid__actions-menu\\"
                            >
                                <slot
                                    name=\\"actions\\"
                                    :item=\\"item\\"
                                    :itemIndex=\\"itemIndex\\"
                                >
                                                                    </slot>
                            </sw-context-button>
                            
                                                        <slot
                                name=\\"action-modals\\"
                                :item=\\"item\\"
                            >
                                                            </slot>
                                                    </div>
                                            </td>
                                    </tr>
                            </tbody>
            
                        <sw-data-grid-skeleton
                v-else
                :show-selection=\\"showSelection\\"
                :show-actions=\\"showActions\\"
                :current-columns=\\"currentColumns\\"
                :has-resize-columns=\\"hasResizeColumns\\"
                :item-amount=\\"skeletonItemAmount\\"
                class=\\"sw-data-grid__body\\"
            />
                    </table>
            </div>
    
        <div class=\\"sw-data-grid__pagination\\">
                <slot name=\\"pagination\\">
                    </slot>
            </div>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-extension-card-bought 1`] = `
"<sw-meteor-card
    class=\\"sw-extension-card-base\\"
    :class=\\"extensionCardClasses\\"
>
        <sw-loader v-if=\\"isLoading\\" />
    
        <div class=\\"sw-extension-card-base__switch\\">
                <sw-switch-field
            v-model=\\"isActive\\"
            :disabled=\\"!isInstalled\\"
        />
            </div>
    
<sw-extension-deactivation-modal
    v-if=\\"showDeactivationModal\\"
    :extension-name=\\"label\\"
    :is-licensed=\\"license !== null\\"
    :is-loading=\\"isLoading\\"
    @modal-close=\\"closeDeactivationModal\\"
    @extension-deactivate=\\"closeModalAndDeactivateExtension\\"
/>

        <img
        class=\\"sw-extension-card-base__icon\\"
        :src=\\"image\\"
    >
    
        <div class=\\"sw-extension-card-base__info\\">
                        <section>
                        <span class=\\"sw-extension-card-base__info-name\\">
                {{ extension.label }}
            </span>
            
                        <span
                v-if=\\"isInstalled && !extension.active\\"
                class=\\"sw-extension-card-base__info-inactive\\"
            >
                {{ $tc('sw-extension-store.component.sw-extension-card-base.inactiveLabel') }}
            </span>
                    </section>
        
                <section class=\\"sw-extension-card-base__info-description\\">
            {{ description }}
        </section>
                
<section v-if=\\"priceInfo && extension.storeLicense.variant === 'rent'\\">
        <span class=\\"sw-extension-card-bought__info-price\\">
        {{ priceInfo }}
    </span>
    </section>

<section v-if=\\"subscriptionExpiredText\\">
        <span
        class=\\"sw-extension-card-bought__info-subscription-expiry\\"
        :class=\\"subscriptionExpiredTextClasses\\"
    >
        <sw-icon
            v-if=\\"isExpiredTestPhase\\"
            name=\\"default-badge-alert\\"
            size=\\"14\\"
            small
        />
        <sw-icon
            v-else-if=\\"isExpiredRent\\"
            name=\\"default-badge-warning\\"
            size=\\"14\\"
            small
        />

        {{ subscriptionExpiredText }}
    </span>
    </section>
    </div>
    
        <div class=\\"sw-extension-card-base__meta-info\\">
                        <span v-if=\\"isInstalled\\">
            {{ $tc('sw-extension-store.component.sw-extension-card-base.installedLabel') }}
            {{ dateFilter(extension.installedAt.date, { year: 'numeric' }) }}
        </span>

        <span v-else-if=\\"extension.storeLicense\\">
            {{ $tc('sw-extension-store.component.sw-extension-card-base.purchasedLabel') }}
            {{ dateFilter(extension.storeLicense.creationDate, { year: 'numeric' }) }}
        </span>
        
                <section>
                        <span v-if=\\"extension.version\\">
                {{ $tc('sw-extension.my-extensions.listing.version') }}: {{ extension.version }}
            </span>
            
                        <span v-if=\\"isUpdateable\\">
                <a
                    href=\\"\\"
                    @click.prevent=\\"updateExtension\\"
                >
                    {{ $tc('sw-extension.my-extensions.listing.update') }}
                </a>
            </span>
                    </section>
                    </div>
    
        <div class=\\"sw-extension-card-base__main-action\\">
                <span
            v-if=\\"!isInstalled\\"
            class=\\"sw-extension-card-base__open-extension\\"
            @click=\\"openPermissionsModalForInstall\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.installExtensionLabel') }}
        </span>

        
        <span
            v-else-if=\\"extensionCanBeOpened\\"
            class=\\"sw-extension-card-base__open-extension\\"
            style=\\"display: none;\\"
            @click=\\"openExtension\\"
        >
            {{ $tc(openLinkInformation.label || 'sw-extension-store.component.sw-extension-card-base.openExtensionLabel') }}
        </span>
            </div>
    
        <sw-context-button
        class=\\"sw-extension-card-base__context-menu\\"
        :menu-width=\\"180\\"
    >
        
<sw-context-menu-item
    v-if=\\"detailLink\\"
    class=\\"sw-extension-card-bought__detail-link\\"
    :router-link=\\"detailLink\\"
>
    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.seeDetailsLabel') }}
</sw-context-menu-item>

<sw-context-menu-item
    v-if=\\"isInstalled && extension.storeLicense\\"
    class=\\"sw-extension-card-bought__rate-link\\"
    @click=\\"openRatingModal\\"
>
    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.rateLabel') }}
</sw-context-menu-item>

                <sw-context-menu-item
            v-if=\\"isInstalled && extension.configurable\\"
            :router-link=\\"{ name: 'sw.extension.config', params: { namespace: extension.name } }\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.config') }}
        </sw-context-menu-item>
        
                <sw-context-menu-item
            v-if=\\"extensionCanBeOpened && extension.active\\"
            :disabled=\\"!openLinkExists\\"
            :router-link=\\"openLink\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.config') }}
        </sw-context-menu-item>
        
                <sw-context-menu-item
            v-if=\\"privacyPolicyLink\\"
            @click=\\"openPrivacyAndSafety\\"
        >
            <span class=\\"sw-extension-card-base__context-menu-privacy-link\\">
                {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.privacyAndSafetyLabel') }}
                <sw-icon
                    name=\\"small-arrow-small-external\\"
                    size=\\"10px\\"
                />
            </span>
        </sw-context-menu-item>
        
                <sw-context-menu-item
            v-if=\\"isInstalled && extension.privacyPolicyExtension\\"
            @click=\\"openPrivacyModal\\"
        >

            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.policyExtensions') }}
        </sw-context-menu-item>
        
                <sw-context-menu-item
            v-if=\\"isInstalled && permissions\\"
            @click=\\"openPermissionsModal\\"
        >

            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.permissions') }}
        </sw-context-menu-item>
        
                        <sw-context-menu-item
            v-if=\\"isUpdateable\\"
            @click=\\"updateExtension\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.updateLabel', 0, { version: extension.latestVersion }) }}
        </sw-context-menu-item>

        <sw-context-menu-item
            v-if=\\"extension.storeLicense && extension.storeLicense.variant === 'rent' && extension.storeLicense.expirationDate === null\\"
            class=\\"sw-extension-card-base__cancel-and-remove-link\\"
            variant=\\"danger\\"
            @click=\\"openRemovalModal\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.cancelAndRemoveLabel') }}
        </sw-context-menu-item>

        <sw-context-menu-item
            v-else-if=\\"isRemovable\\"
            class=\\"sw-extension-card-base__remove-link\\"
            variant=\\"danger\\"
            @click=\\"openRemovalModal\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.removeLabel') }}
        </sw-context-menu-item>

        <sw-context-menu-item
            v-if=\\"isUninstallable\\"
            variant=\\"danger\\"
            @click=\\"openUninstallModal\\"
        >
            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.uninstallLabel') }}
        </sw-context-menu-item>
                            </sw-context-button>
    
            <sw-extension-uninstall-modal
        v-if=\\"showUninstallModal\\"
        :extension-name=\\"extension.label\\"
        :is-licensed=\\"extension.storeLicense !== null\\"
        :is-loading=\\"isLoading\\"
        @modal-close=\\"closeUninstallModal\\"
        @uninstall-extension=\\"closeModalAndUninstallExtension\\"
    />
    
        <sw-extension-removal-modal
        v-if=\\"showRemovalModal\\"
        :extension-name=\\"extension.label\\"
        :is-licensed=\\"extension.storeLicense !== null && extension.storeLicense.variant === 'rent'\\"
        :is-loading=\\"isLoading\\"
        @modal-close=\\"closeRemovalModal\\"
        @remove-extension=\\"closeModalAndRemoveExtension\\"
    />
    
        <sw-extension-permissions-modal
        v-if=\\"showPermissionsModal\\"
        :extension-label=\\"extension.label\\"
        :permissions=\\"permissions\\"
        :domains=\\"extension.domains\\"
        :action-label=\\"permissionModalActionLabel\\"
        @modal-close=\\"closePermissionsModal\\"
        @close-with-action=\\"closePermissionsModalAndInstallExtension\\"
    />
    
        <sw-extension-privacy-policy-extensions-modal
        v-if=\\"showPrivacyModal\\"
        :extension-name=\\"extension.label\\"
        :privacy-policy-extension=\\"extension.privacyPolicyExtension\\"
        @modal-close=\\"closePrivacyModal\\"
    />
        
<sw-extension-rating-modal
    v-if=\\"showRatingModal\\"
    :extension=\\"extension\\"
    @modal-close=\\"closeRatingModal\\"
/>

<sw-modal
    v-if=\\"showExtensionInstallationFailedModal\\"
    :title=\\"extension.label\\"
    variant=\\"small\\"
    class=\\"sw-extension-card-bought__installation-failed-modal\\"
    @modal-close=\\"closeInstallationFailedNotification\\"
>
        <sw-extension-adding-failed
        :extension-name=\\"extension.name\\"
        :title=\\"installationFailedError && installationFailedError.title\\"
        :detail=\\"installationFailedError && installationFailedError.message\\"
        :documentation-link=\\"installationFailedError && installationFailedError.parameters && installationFailedError.parameters.documentationLink\\"
        @close=\\"closeInstallationFailedNotification\\"
    />
    </sw-modal>
    </sw-meteor-card>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-image-slider 1`] = `
"<div
    v-if=\\"images.length > 0\\"
    class=\\"sw-image-slider\\"
    :style=\\"wrapperStyles\\"
>

        <div
        class=\\"sw-image-slider__image-container\\"
        :style=\\"containerStyles\\"
    >

                <div
            class=\\"sw-image-slider__image-scrollable\\"
            :style=\\"scrollableContainerStyles\\"
        >

                        <div
                v-for=\\"(image, index) in images\\"
                :key=\\"index\\"
                class=\\"sw-image-slider__element-wrapper\\"
                :aria-hidden=\\"isHiddenItem(index)\\"
                :style=\\"componentStyles\\"
            >

                                <div
                    class=\\"sw-image-slider__element-container\\"
                    :class=\\"elementClasses(index)\\"
                    :style=\\"elementStyles(image, index)\\"
                    @click=\\"onSetCurrentItem(index)\\"
                >

                                        <img
                        class=\\"sw-image-slider__element-image\\"
                        :class=\\"imageClasses(index)\\"
                        :style=\\"[borderStyles(image), imageStyles]\\"
                        :src=\\"getImage(image)\\"
                        :alt=\\"imageAlt(index)\\"
                    >
                                    </div>
                
                                <div
                    v-if=\\"hasValidDescription(image)\\"
                    class=\\"sw-image-slider__element-description\\"
                    :style=\\"componentStyles\\"
                >
                    {{ image.description }}
                </div>
                            </div>
                    </div>
        
                <template v-if=\\"showArrows\\">

                        <div
                class=\\"sw-image-slider__arrow arrow-left\\"
                @click=\\"goToPreviousImage\\"
            >
                <sw-icon name=\\"default-arrow-head-left\\" />
            </div>
            
                        <div
                class=\\"sw-image-slider__arrow arrow-right\\"
                @click=\\"goToNextImage\\"
            >
                <sw-icon name=\\"default-arrow-head-right\\" />
            </div>
                    </template>
            </div>
    
        <div
        v-if=\\"showButtons\\"
        class=\\"sw-image-slider__buttons\\"
        :class=\\"buttonClasses\\"
    >

                <button
            v-for=\\"(item, index) in buttonList\\"
            :key=\\"index\\"
            class=\\"sw-image-slider__buttons-element\\"
            :class=\\"{ 'is--active': index === currentPageNumber }\\"
            @click=\\"setCurrentPageNumber(index)\\"
        >
            {{ imageAlt(index) }}
        </button>
            </div>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-mail-template-detail 1`] = `
"<sw-page class=\\"sw-mail-template-detail\\">

        <template #smart-bar-header>
        <h2 v-if=\\"mailTemplate\\">
            {{ $tc('sw-mail-template.detail.textHeadlineEdit') }}
        </h2>
        <h2
            v-else
            class=\\"sw-mail-template-detail__empty-title\\"
        >
            {{ $tc('sw-mail-template.detail.textHeadline') }}
        </h2>
    </template>
    
        <template #smart-bar-actions>
                <sw-button
            v-tooltip.bottom=\\"{
                message: 'ESC',
                appearance: 'light'
            }\\"
            :disabled=\\"isLoading\\"
            @click=\\"onCancel\\"
        >
            {{ $tc('sw-mail-template.detail.buttonCancel') }}
        </sw-button>
        
                <sw-button-process
            v-tooltip.bottom=\\"tooltipSave\\"
            class=\\"sw-mail-template-detail__save-action\\"
            variant=\\"primary\\"
            :is-loading=\\"isLoading\\"
            :process-success=\\"isSaveSuccessful\\"
            :disabled=\\"!allowSave\\"
            @process-finish=\\"saveFinish\\"
            @click.prevent=\\"onSave\\"
        >
            {{ $tc('sw-mail-template.detail.buttonSave') }}
        </sw-button-process>
            </template>
    
        <template #language-switch>
        <sw-language-switch
            :save-changes-function=\\"saveOnLanguageChange\\"
            :abort-change-function=\\"abortOnLanguageChange\\"
            @on-change=\\"onChangeLanguage\\"
        />
    </template>
    
        <template #content>
        <sw-card-view sidebar>
                        <sw-language-info
                :entity-description=\\"placeholder(mailTemplate, 'description', $tc('sw-mail-template.detail.textHeadline'))\\"
            />
            
                        <sw-card :title=\\"$tc('sw-mail-template.detail.basic.titleCard')\\">
                                <sw-entity-single-select
                    id=\\"mailTemplateTypes\\"
                    v-model=\\"mailTemplate.mailTemplateTypeId\\"
                    entity=\\"mail_template_type\\"
                    required
                    :label=\\"$tc('sw-mail-template.detail.basic.labelMailType')\\"
                    :placeholder=\\"$tc('sw-mail-template.detail.basic.placeholderMailType')\\"
                    :disabled=\\"!acl.can('mail_templates.editor')\\"
                    :error=\\"mailTemplateMailTemplateTypeIdError\\"
                    @change=\\"onChangeType\\"
                />
                
                                <sw-field
                    v-model=\\"mailTemplate.description\\"
                    type=\\"textarea\\"
                    :label=\\"$tc('sw-mail-template.detail.basic.labelDescription')\\"
                    :placeholder=\\"$tc('sw-mail-template.detail.basic.placeholderDescription')\\"
                    :disabled=\\"!acl.can('mail_templates.editor')\\"
                />
                            </sw-card>
            
                        <sw-card :title=\\"$tc('sw-mail-template.detail.options.titleCard')\\">
                <sw-container
                    columns=\\"repeat(auto-fit, minmax(250px, 1fr))\\"
                    gap=\\"0 30px\\"
                    class=\\"sw-mail-template-detail-options__container\\"
                >
                    <div class=\\"sw-mail-template-detail__options-info-wrapper\\">

                                                <sw-field
                            v-model=\\"mailTemplate.subject\\"
                            type=\\"text\\"
                            required
                            :label=\\"$tc('sw-mail-template.detail.options.labelSubject')\\"
                            :placeholder=\\"placeholder(mailTemplate, 'subject', $tc('sw-mail-template.detail.options.placeholderSubject'))\\"
                            :disabled=\\"!acl.can('mail_templates.editor')\\"
                            :error=\\"mailTemplateSubjectError\\"
                        />
                                            </div>

                                        <sw-field
                        v-model=\\"mailTemplate.senderName\\"
                        type=\\"text\\"
                        :label=\\"$tc('sw-mail-template.detail.options.labelSenderName')\\"
                        :placeholder=\\"placeholder(mailTemplate, 'senderName', $tc('sw-mail-template.detail.options.placeholderSenderName'))\\"
                        :disabled=\\"!acl.can('mail_templates.editor')\\"
                    />
                                    </sw-container>
            </sw-card>
            
                        <sw-card :title=\\"$tc('sw-mail-template.detail.media.titleCard')\\">
                                <sw-upload-listener
                    v-if=\\"mailTemplate.id\\"
                    auto-upload
                    :upload-tag=\\"mailTemplate.id\\"
                    @media-upload-finish=\\"successfulUpload\\"
                />

                <sw-media-upload-v2
                    v-if=\\"mailTemplate.id\\"
                    variant=\\"regular\\"
                    default-folder=\\"mail_template\\"
                    :upload-tag=\\"mailTemplate.id\\"
                    :file-accept=\\"fileAccept\\"
                    :disabled=\\"!acl.can('mail_templates.editor')\\"
                    @media-drop=\\"onMediaDrop\\"
                    @media-upload-sidebar-open=\\"openMediaSidebar\\"
                />
                
                                <sw-data-grid
                    v-if=\\"mailTemplateMedia && mailTemplateMedia.length > 0\\"
                    class=\\"sw-mail-template-detail__attachments-info-grid\\"
                    :data-source=\\"mailTemplateMedia\\"
                    :columns=\\"mediaColumns\\"
                    :full-page=\\"false\\"
                    :show-settings=\\"false\\"
                    :allow-column-edit=\\"false\\"
                    :allow-inline-edit=\\"false\\"
                    :compact-mode=\\"false\\"
                    :show-selection=\\"acl.can('mail_templates.editor')\\"
                    @selection-change=\\"onSelectionChanged\\"
                >
                    <template #preview-fileName=\\"{ item }\\">
                                                <sw-media-preview :source=\\"item.id\\" />
                                            </template>

                    <template #actions=\\"{ item }\\">
                                                <sw-context-menu-item
                            v-tooltip.bottom=\\"{
                                message: $tc('sw-privileges.tooltip.warning'),
                                disabled: acl.can('mail_templates.editor'),
                                showOnDisabledElements: true
                            }\\"
                            variant=\\"danger\\"
                            :disabled=\\"!acl.can('mail_templates.editor')\\"
                            @click=\\"onDeleteMedia(item.id)\\"
                        >
                            {{ $tc('global.default.delete') }}
                        </sw-context-menu-item>
                                            </template>

                    <template #bulk>
                                                <a
                            class=\\"link link-danger\\"
                            @click=\\"onDeleteSelectedMedia\\"
                        >
                            {{ $tc('global.default.delete') }}
                        </a>
                                            </template>
                </sw-data-grid>
                            </sw-card>
            
                        <sw-card :title=\\"$tc('sw-mail-template.detail.mailText.titleCard')\\">
                                <sw-code-editor
                    ref=\\"plainEditor\\"
                    :key=\\"\`\${mailTemplate.mailTemplateTypeId}plain\`\\"
                    v-model=\\"mailTemplate.contentPlain\\"
                    name=\\"content_plain\\"
                    completion-mode=\\"entity\\"
                    :label=\\"$tc('sw-mail-template.detail.mailText.labelContentPlain')\\"
                    :placeholder=\\"placeholder(mailTemplate, 'contentPlain', $tc('sw-mail-template.detail.mailText.placeholderPlain'))\\"
                    :completer-function=\\"outerCompleterFunction\\"
                    :editor-config=\\"editorConfig\\"
                    :disabled=\\"!acl.can('mail_templates.editor')\\"
                />
                
                                <sw-code-editor
                    ref=\\"htmlEditor\\"
                    :key=\\"\`\${mailTemplate.mailTemplateTypeId}html\`\\"
                    v-model=\\"mailTemplate.contentHtml\\"
                    name=\\"content_html\\"
                    completion-mode=\\"entity\\"
                    :label=\\"$tc('sw-mail-template.detail.mailText.labelContentHtml')\\"
                    :placeholder=\\"placeholder(mailTemplate, 'contentHtml', $tc('sw-mail-template.detail.mailText.placeholderHtml'))\\"
                    :completer-function=\\"outerCompleterFunction\\"
                    :editor-config=\\"editorConfig\\"
                    :disabled=\\"!acl.can('mail_templates.editor')\\"
                />
                            </sw-card>
                        <sw-modal
                v-if=\\"mailPreview\\"
                class=\\"sw-mail-template-preview-modal\\"
                :title=\\"$tc('sw-mail-template.detail.previewModalTitle')\\"
                :is-loading=\\"isLoading\\"
                @modal-close=\\"onCancelShowPreview\\"
            >
                <template v-if=\\"!isLoading\\">
                    <span v-html=\\"mailPreview\\"></span>
                </template>
                                <template slot=\\"modal-footer\\">
                                        <sw-button
                        size=\\"small\\"
                        @click=\\"onCancelShowPreview\\"
                    >
                        {{ $tc('global.default.close') }}
                    </sw-button>
                                    </template>
                            </sw-modal>
                                </sw-card-view>
    </template>
    
        <template #sidebar>
        <sw-sidebar :propagate-width=\\"true\\">
                        <sw-sidebar-item
                icon=\\"default-object-paperplane\\"
                :title=\\"$tc('sw-mail-template.detail.sidebar.titleTestMail')\\"
                class=\\"sw-mail-template-detail__test-mail-sidebar\\"
            >
                <div class=\\"sw-mail-template-detail__test-mail-sidebar-container\\">
                                        <sw-text-field
                        v-model=\\"testerMail\\"
                        :placeholder=\\"$tc('sw-mail-template.detail.sidebar.placeholderTestMail')\\"
                        :label=\\"$tc('sw-mail-template.detail.sidebar.labelTestMail')\\"
                        :disabled=\\"!acl.can('mail_templates.editor')\\"
                    />
                    
                                        <sw-entity-single-select
                        v-model=\\"testMailSalesChannelId\\"
                        entity=\\"sales_channel\\"
                        :label=\\"$tc('sw-mail-template.detail.basic.labelSalesChannels')\\"
                        :placeholder=\\"$tc('sw-mail-template.detail.basic.placeholderSalesChannels')\\"
                    />
                    
                                        <sw-button
                        :disabled=\\"isLoading || !testMailRequirementsMet\\"
                        class=\\"sw-mail-template-detail__send-test-mail\\"
                        @click=\\"onClickTestMailTemplate\\"
                    >
                        {{ $tc('sw-mail-template.detail.sidebar.buttonTestMail') }}
                    </sw-button>
                                    </div>
            </sw-sidebar-item>

            <sw-sidebar-item
                icon=\\"default-text-code\\"
                :title=\\"$tc('sw-mail-template.detail.sidebar.titleShowAvailableVariables')\\"
                :disabled=\\"mailTemplate.mailTemplateTypeId === undefined || mailTemplate.mailTemplateTypeId === null\\"
                class=\\"sw-mail-template-detail__show-available-variables\\"
            >
                <div class=\\"sw-mail-template-detail__available-variables-sidebar-container\\">
                                        <sw-tree
                        class=\\"sw-mail-template-detail__available-variables-sidebar-container__tree\\"
                        :searchable=\\"false\\"
                        :disable-context-menu=\\"true\\"
                        :on-change-route=\\"() => { return false; }\\"
                        :items=\\"loadedAvailableVariables\\"
                        :sortable=\\"false\\"
                        @get-tree-items=\\"onGetTreeItems\\"
                    >
                        <template slot=\\"headline\\">
                            <span></span></template>
                        <template
                            slot=\\"items\\"
                            slot-scope=\\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }\\"
                        >
                            <sw-tree-item
                                v-for=\\"(item, index) in treeItems\\"
                                :key=\\"item.id\\"
                                :item=\\"item\\"
                                :disable-context-menu=\\"disableContextMenu\\"
                                :on-change-route=\\"onChangeRoute\\"
                                :sortable=\\"false\\"
                                :display-checkbox=\\"false\\"
                            >
                                <template slot=\\"grip\\">
                                    <span></span></template>
                                <template #actions=\\"{ item }\\">
                                    <sw-icon
                                        v-tooltip=\\"{message: $tc('sw-mail-template.detail.sidebar.copyTooltip'),
                                                    width: 150,
                                                    position: 'bottom'}\\"
                                        name=\\"small-copy\\"
                                        class=\\"sw-mail-template-detail__copy_icon\\"
                                        @click=\\"onCopyVariable(item.id)\\"
                                    />
                                </template>
                            </sw-tree-item>
                        </template>
                    </sw-tree>
                                    </div>
            </sw-sidebar-item>

            <sw-sidebar-item
                icon=\\"default-eye-open\\"
                :title=\\"$tc('sw-mail-template.detail.sidebar.titleShowPreview')\\"
                :disabled=\\"showPreview\\"
                class=\\"sw-mail-template-detail__show-preview-sidebar\\"
                @click=\\"onClickShowPreview\\"
            />

            <sw-sidebar-media-item ref=\\"mediaSidebarItem\\">
                <template
                    slot=\\"context-menu-items\\"
                    slot-scope=\\"media\\"
                >
                                        <sw-context-menu-item
                        :disabled=\\"!acl.can('mail_templates.editor')\\"
                        @click=\\"onAddItemToAttachment(media.mediaItem)\\"
                    >
                        {{ $tc('sw-mail-template.detail.sidebar.labelContextMenuAddToMailTemplate') }}
                    </sw-context-menu-item>
                                    </template>
            </sw-sidebar-media-item>
                    </sw-sidebar>
    </template>
    </sw-page>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-media-base-item 1`] = `
"<div
    class=\\"sw-media-base-item\\"
    :class=\\"mediaItemClasses\\"
    @click=\\"handleItemClick\\"
>

        <div
        v-if=\\"!isList && allowEdit\\"
        class=\\"sw-media-base-item__selected-indicator\\"
        :class=\\"selectionIndicatorClasses\\"
        @click=\\"onClickedItem\\"
    >

                <sw-icon
            v-if=\\"listSelected\\"
            small
            name=\\"small-default-checkmark-line-small\\"
        />
            </div>
    
        <div class=\\"sw-media-base-item__preview-container\\">
        <slot
            name=\\"preview\\"
            v-bind=\\"{ item }\\"
        >
                    </slot>
    </div>
    
        <div
        class=\\"sw-media-base-item__name-container\\"
        :class=\\"mediaNameContainerClasses\\"
    >
        <slot
            name=\\"name\\"
            v-bind=\\"{ item, isInlineEdit, startInlineEdit, endInlineEdit }\\"
        ></slot>
    </div>
    
        <div
        v-if=\\"isList && showContextMenuButton\\"
        class=\\"sw-media-base-item__metadata-container\\"
    >
                <slot
            name=\\"metadata\\"
            v-bind=\\"{ item }\\"
        >
                    </slot>
            </div>
    
        <sw-context-button
        v-if=\\"showContextMenuButton && !isLoading\\"
        ref=\\"swContextButton\\"
    >
                <slot
            name=\\"context-menu\\"
            v-bind=\\"{ item, startInlineEdit, allowEdit, allowDelete }\\"
        >
                    </slot>
        </sw-context-button>
    
        <div
        v-if=\\"isList && showSelectionIndicator && allowMultiSelect\\"
        class=\\"sw-media-base-item__selected-indicator\\"
        :class=\\"selectionIndicatorClasses\\"
        @click=\\"onClickedItem\\"
    >

                <sw-icon
            v-if=\\"listSelected\\"
            small
            name=\\"small-default-checkmark-line-small\\"
        />
            </div>
    
        <sw-icon
        v-if=\\"isLoading\\"
        class=\\"sw-media-base-item__loader\\"
        name=\\"default-web-loading-star\\"
        size=\\"16px\\"
    />
    
    <slot
        name=\\"modal-windows\\"
        v-bind=\\"{ item, allowEdit, allowDelete }\\"
    ></slot>
</div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-media-folder-content 1`] = `
"<div class=\\"sw-media-folder-content\\">
        <ul
        v-if=\\"subFolders.length > 0 || parentFolder !== null\\"
        class=\\"sw-media-folder-content__folder-listing\\"
    >
        
        <li
            v-if=\\"parentFolder !== null\\"
            class=\\"sw-media-folder-content__list-item\\"
        >
            <button
                class=\\"sw-media-folder-content__button sw-media-folder-content__parent-folder\\"
                @click=\\"emitInput(parentFolder)\\"
            >
                                <sw-icon
                    class=\\"sw-media-folder-content__folder-icon\\"
                    name=\\"multicolor-folder-thumbnail\\"
                    size=\\"24px\\"
                    multicolor
                />
                                {{ parentFolder.name }}
            </button>
        </li>

        <li
            v-for=\\"(folder, index) in subFolders\\"
            :key=\\"folder.id\\"
            :class=\\"[{'is--selected': folder.id === selectedId}, 'sw-media-folder-content__list-item--' + index ]\\"
            class=\\"sw-media-folder-content__list-item\\"
            @click=\\"emitInput(folder)\\"
        >

                                    <button class=\\"sw-media-folder-content__button sw-media-folder-content__folder-button\\">
                                <sw-icon
                    class=\\"sw-media-folder-content__folder-icon\\"
                    name=\\"multicolor-folder-thumbnail\\"
                    size=\\"24px\\"
                    multicolor
                />
                                {{ folder.name }}
            </button>
                                    <sw-icon
                v-if=\\"getChildCount(folder) > 0\\"
                class=\\"sw-media-folder-content__switch-button\\"
                name=\\"small-arrow-small-right\\"
                size=\\"16px\\"
            />
                                </li>
            </ul>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-media-list-selection-item-v2 1`] = `
"<div
    class=\\"sw-media-list-selection-item-v2\\"
    :class=\\"productImageClasses\\"
>

        <template v-if=\\"!isPlaceholder\\">

                <sw-media-preview-v2
            class=\\"sw-media-list-selection-item-v2__image\\"
            :source=\\"sourceId\\"
            :hide-tooltip=\\"hideTooltip\\"
            @click=\\"$emit('click')\\"
        />
        
                <sw-context-button
            v-if=\\"!hideActions\\"
            class=\\"sw-media-list-selection-item-v2__context-button\\"
        >
                                    <sw-context-menu-item
                variant=\\"danger\\"
                @click=\\"$emit('item-remove')\\"
            >
                {{ $tc('global.sw-media-list-selection-item-v2.buttonRemove') }}
            </sw-context-menu-item>
                                </sw-context-button>
            </template>

    
        <template v-else>
                <sw-icon
            class=\\"sw-media-list-selection-item-v2__placeholder-icon\\"
            :name=\\"'default-object-image'\\"
            :small=\\"true\\"
        />
            </template>
    
</div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-order-line-items-grid 1`] = `
"<sw-container
    type=\\"row\\"
    class=\\"sw-order-line-items-grid\\"
>

        <sw-container
        v-show=\\"editable\\"
        class=\\"sw-order-line-items-grid__actions-container\\"
        columns=\\"1fr auto\\"
        gap=\\"16px\\"
    >

                <div align=\\"left\\">
            <sw-card-filter
                ref=\\"itemFilter\\"
                :placeholder=\\"$tc('sw-order.createBase.placeholderSearchBarItem')\\"
                @sw-card-filter-term-change=\\"onSearchTermChange\\"
            />
        </div>
        
                <div align=\\"right\\">

                        <sw-button-group :disabled=\\"isLoading\\">

                                <sw-button
                    class=\\"sw-order-line-items-grid__actions-container-add-product-btn\\"
                    variant=\\"ghost\\"
                    size=\\"small\\"
                    @click=\\"onInsertExistingItem\\"
                >
                    {{ $tc('sw-order.detailBase.buttonAddProduct') }}
                </sw-button>
                
                                <sw-context-button>
                    <template #button>
                        <sw-button
                            variant=\\"ghost\\"
                            size=\\"small\\"
                            square
                        >
                            <sw-icon
                                name=\\"small-arrow-small-down\\"
                                decorative
                            />
                        </sw-button>
                    </template>

                                        <sw-context-menu-item @click=\\"onInsertBlankItem\\">
                        {{ $tc('sw-order.detailBase.buttonAddBlankProduct') }}
                    </sw-context-menu-item>
                    <sw-context-menu-item
                        v-tooltip=\\"{
                            message: $tc('sw-privileges.tooltip.warning'),
                            disabled: canCreateDiscounts,
                            showOnDisabledElements: true
                        }\\"
                        class=\\"sw-order-line-items-grid__can-create-discounts-button\\"
                        :disabled=\\"!canCreateDiscounts\\"
                        @click=\\"onInsertCreditItem\\"
                    >
                        {{ $tc('sw-order.detailBase.buttonAddCredit') }}
                    </sw-context-menu-item>
                    
                </sw-context-button>
                
            </sw-button-group>
            
        </div>
        
    </sw-container>
    
        <sw-data-grid
        class=\\"sw-order-line-items-grid__data-grid\\"
        identifier=\\"sw-order-line-item-grid\\"
        :data-source=\\"orderLineItems\\"
        :columns=\\"getLineItemColumns\\"
        :full-page=\\"false\\"
        :show-settings=\\"false\\"
        :show-selection=\\"editable\\"
        :show-actions=\\"true\\"
        :is-loading=\\"isLoading\\"
        :allow-column-edit=\\"false\\"
        :allow-inline-edit=\\"editable\\"
        :compact-mode=\\"false\\"
        :is-record-editable=\\"(item) => !isPromotionItem(item)\\"
        @inline-edit-cancel=\\"onInlineEditCancel\\"
        @inline-edit-save=\\"onInlineEditSave\\"
        @selection-change=\\"onSelectionChanged\\"
    >

                        <template #column-label=\\"{ item, isInlineEdit }\\">

                        <sw-order-product-select
                v-if=\\"isInlineEdit\\"
                :sales-channel-id=\\"salesChannelId\\"
                :tax-status=\\"taxStatus\\"
                :item=\\"item\\"
            />
            
                        <div
                v-else-if=\\"!isInlineEdit && isProductItem(item)\\"
                class=\\"sw-order-line-items-grid__item-product\\"
            >

                                <sw-button
                    v-if=\\"hasChildren(item)\\"
                    v-tooltip=\\"{ message: $tc('sw-order.detailBase.tooltipNestedLineItemsButton') }\\"
                    class=\\"sw-order-line-items-grid__item-nested-indicator\\"
                    size=\\"x-small\\"
                    @click=\\"openNestedLineItemsModal(item)\\"
                >

                                        <sw-icon
                        class=\\"sw-order-line-items-grid__nested-indicator-icon\\"
                        name=\\"default-text-editor-list\\"
                        size=\\"14px\\"
                    />
                    
                </sw-button>
                
                                                <router-link
                    v-if=\\"item.payload && item.payload.options\\"
                    class=\\"sw-order-line-items-grid__item-payload-options\\"
                    :title=\\"$tc('sw-order.detailBase.contextMenuShowProduct')\\"
                    :to=\\"{ name: 'sw.product.detail', params: { id: item.productId } }\\"
                >
                    <sw-product-variant-info :variations=\\"item.payload.options\\">
                        <div class=\\"sw-order-line-items-grid__item-label\\">
                            {{ item.label }}
                        </div>
                    </sw-product-variant-info>
                </router-link>
                
                                <template
                    v-else
                    class=\\"sw-order-line-items-grid__item-payload-options\\"
                >
                    <div class=\\"sw-order-line-items-grid__item-label\\">
                        {{ item.label }}
                    </div>
                </template>
                                
            </div>
            
                        <template v-else>
                <div class=\\"sw-order-line-items-grid__item-label\\">
                    {{ item.label }}
                </div>
            </template>
            
        </template>
        
                <template #column-unitPrice=\\"{ item, isInlineEdit }\\">

                        <sw-number-field
                v-if=\\"isInlineEdit && !itemCreatedFromProduct(item.id)\\"
                v-model=\\"item.priceDefinition.price\\"
                placeholder=\\"0\\"
                size=\\"small\\"
                :min=\\"getMinItemPrice(item.id)\\"
                @change=\\"checkItemPrice($event, item)\\"
            />
            
                        <template v-else>
                {{ item.unitPrice | currency(order.currency.shortName) }}
            </template>
            
        </template>
        
                <template #column-totalPrice=\\"{ item }\\">

                        {{ item.totalPrice | currency(order.currency.shortName) }}
            
        </template>
        
                <template #column-quantity=\\"{ item, isInlineEdit }\\">

                        <sw-number-field
                v-if=\\"isInlineEdit && !isCreditItem(item.id)\\"
                v-model=\\"item.quantity\\"
                number-type=\\"int\\"
                :min=\\"1\\"
                size=\\"small\\"
                placeholder=\\"0\\"
                @change=\\"updateItemQuantity(item)\\"
            />
            
                        <template v-else>
                {{ item.quantity }}
            </template>
            
        </template>
        
        
        <template #column-price.taxRules[0]=\\"{ item, isInlineEdit }\\">

                        <sw-number-field
                v-if=\\"isInlineEdit && showTaxRulesInlineEdit(item)\\"
                key=\\"order-line-item-tax-edit-default\\"
                v-model=\\"item.priceDefinition.taxRules[0].taxRate\\"
                size=\\"small\\"
                placeholder=\\"0\\"
            />
            
                        <span
                v-else-if=\\"hasMultipleTaxes(item)\\"
                v-tooltip=\\"tooltipTaxDetail(item)\\"
                class=\\"sw-order-line-items-grid__item-tax-tooltip\\"
            >
                {{ showTaxValue(item) }}
            </span>
            
                        <template v-else-if=\\"item.price && item.price.taxRules.length\\">
                {{ showTaxValue(item) }}
            </template>
            
        </template>
        
                <template #actions=\\"{ item }\\">

                        <sw-context-menu-item
                :disabled=\\"!isProductItem(item)\\"
                icon=\\"default-eye-open\\"
                :router-link=\\"{ name: 'sw.product.detail', params: { id: item.productId } }\\"
            >

                                {{ $tc('sw-order.detailBase.contextMenuShowProduct') }}
                
            </sw-context-menu-item>
            
        </template>
        
                <template #action-modals=\\"{ item }\\">
                    </template>
        
                <template #bulk>

                        <a
                class=\\"link link-danger\\"
                @click=\\"onDeleteSelectedItems\\"
            >
                {{ $tc('global.default.delete') }}
            </a>
            
        </template>
                
    </sw-data-grid>
    
        <sw-order-nested-line-items-modal
        v-if=\\"nestedLineItemsModal\\"
        :line-item=\\"nestedLineItemsModal\\"
        :order=\\"order\\"
        @modal-close=\\"closeNestedLineItemsModal\\"
    />
    
</sw-container>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-product-stream-detail 1`] = `
"<sw-page class=\\"sw-product-stream-detail\\">
        <template slot=\\"smart-bar-header\\">
        <h2 v-if=\\"productStream\\">
            {{ productStream.name }}
        </h2>
        <h2
            v-else
            class=\\"sw-product-stream-detail__empty-title\\"
        >
            {{ placeholder(productStream, 'name', $tc('sw-product-stream.detail.textHeadline')) }}
        </h2>
    </template>
    
        <template slot=\\"smart-bar-actions\\">
                <sw-button
            v-tooltip.bottom=\\"tooltipCancel\\"
            :disabled=\\"isLoading\\"
            @click=\\"onCancel\\"
        >
            {{ $tc('sw-product-stream.detail.buttonCancel') }}
        </sw-button>
        
                <sw-button-process
            v-model=\\"isSaveSuccessful\\"
            v-tooltip.bottom=\\"tooltipSave\\"
            class=\\"sw-product-stream-detail__save-action\\"
            :is-loading=\\"isLoading\\"
            :disabled=\\"!acl.can('product_stream.editor')\\"
            variant=\\"primary\\"
            @click.prevent=\\"onSave\\"
        >
            {{ $tc('sw-product-stream.detail.buttonSave') }}
        </sw-button-process>
            </template>
    
        <template #language-switch>
        <sw-language-switch
            :save-changes-function=\\"saveOnLanguageChange\\"
            :abort-change-function=\\"abortOnLanguageChange\\"
            :disabled=\\"!productStreamId\\"
            @on-change=\\"onChangeLanguage\\"
        />
    </template>
    
        <template #content>
        <sw-card-view>
                        <sw-language-info
                :entity-description=\\"placeholder(productStream, 'name', $tc('sw-product-stream.detail.textHeadline'))\\"
            />
            
                        <sw-card
                :is-loading=\\"isLoading\\"
                :large=\\"true\\"
                :title=\\"$tc('sw-product-stream.detail.titleCard')\\"
            >
                                <sw-text-field
                    v-if=\\"productStream\\"
                    v-model=\\"productStream.name\\"
                    v-tooltip.bottom=\\"getNoPermissionsTooltip('product_stream.editor')\\"
                    :label=\\"$tc('sw-product-stream.detail.labelName')\\"
                    :validation=\\"nameRequired\\"
                    :required=\\"isSystemLanguage\\"
                    :placeholder=\\"placeholder(productStream, 'name', $tc('sw-product-stream.detail.placeholderName'))\\"
                    :error=\\"productStreamNameError\\"
                    :disabled=\\"!acl.can('product_stream.editor')\\"
                />
                
                                <sw-textarea-field
                    v-if=\\"productStream\\"
                    v-model=\\"productStream.description\\"
                    v-tooltip.bottom=\\"getNoPermissionsTooltip('product_stream.editor')\\"
                    :label=\\"$tc('sw-product-stream.detail.labelDescription')\\"
                    :placeholder=\\"placeholder(productStream, 'description', $tc('sw-product-stream.detail.placeholderDescription'))\\"
                    :disabled=\\"!acl.can('product_stream.editor')\\"
                />
                            </sw-card>
            
                        <sw-card
                :large=\\"true\\"
                class=\\"sw-product-stream-detail__condition_container\\"
                :class=\\"{ 'is--disabled': !acl.can('product_stream.editor') }\\"
                :title=\\"$tc('sw-product-stream.detail.titleFilter')\\"
            >
                                <sw-condition-tree
                    v-if=\\"productStream\\"
                    :initial-conditions=\\"productStreamFilters\\"
                    :condition-repository=\\"productStreamFiltersRepository\\"
                    :condition-data-provider-service=\\"productStreamConditionService\\"
                    child-association-field=\\"queries\\"
                    association-field=\\"productStreamId\\"
                    :association-value=\\"productStream.id\\"
                    :root-condition=\\"null\\"
                    :disabled=\\"!acl.can('product_stream.editor')\\"
                    @conditions-changed=\\"updateFilterTree\\"
                />
                
                                <sw-button
                    class=\\"sw-product-stream-detail__open_modal_preview\\"
                    :disabled=\\"isLoading\\"
                    @click.prevent=\\"openModalPreview\\"
                >
                    {{ $tc('sw-product-stream.detail.buttonOpenPreview') }}
                </sw-button>
                            </sw-card>
            
                        <sw-product-stream-modal-preview
                v-if=\\"showModalPreview\\"
                ref=\\"modalPreview\\"
                :filters=\\"productStreamFiltersTree\\"
                @modal-close=\\"closeModalPreview\\"
            />
            
                        <sw-card
                v-if=\\"showCustomFields\\"
                :large=\\"true\\"
                :title=\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\"
                :is-loading=\\"isLoading\\"
            >
                <sw-custom-field-set-renderer
                    :entity=\\"productStream\\"
                    :disabled=\\"!acl.can('product_stream.editor')\\"
                    :sets=\\"customFieldSets\\"
                />
            </sw-card>
                    </sw-card-view>
    </template>
    </sw-page>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-property-assignment 1`] = `
"<div class=\\"sw-property-assignment\\">

        <sw-property-search
        ref=\\"searchField\\"
        :collapsible=\\"true\\"
        :overlay=\\"true\\"
        :disabled=\\"disabled\\"
        :options=\\"properties\\"
        @option-select=\\"onSelectOption\\"
    />
    
        <sw-grid
        v-if=\\"groupWithOptions.length > 0\\"
        class=\\"sw-property-assignment__grid\\"
        :selectable=\\"false\\"
        :items=\\"groupWithOptions\\"
        :is-fullpage=\\"false\\"
        table
    >

                <template
            slot=\\"columns\\"
            slot-scope=\\"{ item }\\"
        >

                        <sw-grid-column
                flex=\\"200px\\"
                data-index=\\"group.translated.name\\"
                :label=\\"$tc('sw-property-assignment.columnGroup')\\"
                class=\\"sw-property-assignment__grid_group_column\\"
            >
                {{ item.translated.name }}
            </sw-grid-column>
            
                        <sw-grid-column
                data-index=\\"options\\"
                :label=\\"$tc('sw-property-assignment.columnOptions')\\"
                flex=\\"minmax(100px, 1fr)\\"
                class=\\"sw-property-assignment__grid_option_column\\"
            >
                                <div
                    v-for=\\"option in item.options\\"
                    :key=\\"option.id\\"
                    class=\\"sw-property-assignment__grid_option_item\\"
                >
                    <sw-label
                        :dismissable=\\"!disabled\\"
                        @dismiss=\\"deleteOption(option)\\"
                    >
                        <span class=\\"sw-property-assignment__label-content\\">{{ option.translated.name }}</span>
                    </sw-label>
                </div>
                            </sw-grid-column>
                    </template>
        
                <template slot=\\"empty\\">
            <sw-empty-state
                v-if=\\"!isLoading\\"
                :title=\\"$tc('sw-property-assignment.messageEmptyTitle')\\"
                :subline=\\"$tc('sw-property-assignment.messageEmptySubline')\\"
            />
        </template>
            </sw-grid>
    
            <template slot=\\"empty\\">
            <sw-empty-state
                v-if=\\"!isLoading\\"
                :title=\\"$tc('sw-property-assignment.messageEmptyTitle')\\"
                :subline=\\"$tc('sw-property-assignment.messageEmptySubline')\\"
            />
        </template>
        
    <sw-loader v-if=\\"isLoading\\" />
</div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-sales-channel-detail-base 1`] = `
"<div class=\\"sw-sales-channel-detail-base\\">

        <sw-card
        v-if=\\"salesChannel\\"
        :is-loading=\\"isLoading\\"
        :title=\\"$tc('sw-sales-channel.detail.titleGeneralSettings')\\"
    >
                <sw-select-field
            v-if=\\"isProductComparison\\"
            v-model=\\"templateName\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.templates.label')\\"
            :placeholder=\\"$tc('sw-sales-channel.detail.productComparison.templates.placeholderSelectTemplate')\\"
            :options=\\"templateOptions\\"
            @change=\\"$emit('template-selected', arguments[0])\\"
        >
            <option
                v-for=\\"option in templateOptions\\"
                :key=\\"option.name\\"
                :value=\\"option.name\\"
            >
                {{ $tc(option.translationKey) }}
            </option>
        </sw-select-field>
        
                <sw-modal
            v-if=\\"showTemplateModal\\"
            :title=\\"$tc('sw-sales-channel.detail.productComparison.templates.modal-title')\\"
            @modal-close=\\"$emit('template-modal-close')\\"
            @template-modal-confirm=\\"$emit('template-modal-confirm')\\"
        >
                        <slot>
                <p>{{ $tc('sw-sales-channel.detail.productComparison.templates.modal-message') }}</p>
            </slot>
            <slot slot=\\"modal-footer\\">
                <sw-button
                    size=\\"small\\"
                    @click=\\"$emit('template-modal-close')\\"
                >
                    {{ $tc('sw-sales-channel.detail.productComparison.templates.modal-cancel') }}
                </sw-button>
                <sw-button
                    size=\\"small\\"
                    variant=\\"primary\\"
                    @click=\\"$emit('template-modal-confirm')\\"
                >
                    {{ $tc('sw-sales-channel.detail.productComparison.templates.modal-confirm') }}
                </sw-button>
            </slot>
                    </sw-modal>
        
                <sw-field
            v-model=\\"salesChannel.name\\"
            type=\\"text\\"
            validation=\\"required\\"
            required
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :placeholder=\\"placeholder(salesChannel, 'name', $tc('sw-sales-channel.detail.placeholderName'))\\"
            :label=\\"$tc('sw-sales-channel.detail.labelInputName')\\"
            :error=\\"salesChannelNameError\\"
        />
        
                <sw-container
            v-if=\\"!isProductComparison\\"
            columns=\\"1fr 200px\\"
            gap=\\"0 30px\\"
        >

                        <sw-entity-single-select
                v-if=\\"!isProductComparison\\"
                id=\\"navigationCategoryId\\"
                v-model=\\"salesChannel.navigationCategoryId\\"
                required
                class=\\"sw-sales-channel-detail__select-navigation-category-id\\"
                :label=\\"$tc('sw-sales-channel.detail.navigationCategoryId')\\"
                :criteria=\\"mainNavigationCriteria\\"
                :help-text=\\"$tc('sw-sales-channel.detail.navigationCategoryHelpText')\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                :error=\\"salesChannelNavigationCategoryIdError\\"
                entity=\\"category\\"
            />
            
                        <sw-field
                v-model=\\"salesChannel.navigationCategoryDepth\\"
                type=\\"number\\"
                number-type=\\"int\\"
                :min=\\"1\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                :label=\\"$tc('sw-sales-channel.detail.navigationCategoryDepth')\\"
            />
                    </sw-container>
        
                <sw-entity-single-select
            v-if=\\"!isProductComparison\\"
            id=\\"footerCategoryId\\"
            v-model=\\"salesChannel.footerCategoryId\\"
            class=\\"sw-sales-channel-detail__select-footer-category-id\\"
            :label=\\"$tc('sw-sales-channel.detail.footerCategory')\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            entity=\\"category\\"
        />
        
                <sw-entity-single-select
            v-if=\\"!isProductComparison\\"
            id=\\"serviceCategoryId\\"
            v-model=\\"salesChannel.serviceCategoryId\\"
            class=\\"sw-sales-channel-detail__select-service-category-id\\"
            :label=\\"$tc('sw-sales-channel.detail.serviceCategory')\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            entity=\\"category\\"
        />
        
                <sw-entity-single-select
            v-if=\\"!isProductComparison\\"
            v-model=\\"salesChannel.customerGroupId\\"
            class=\\"sw-sales-channel-detail__select-customer-group\\"
            required
            :label=\\"$tc('sw-sales-channel.detail.customerGroup')\\"
            entity=\\"customer_group\\"
            :error=\\"salesChannelCustomerGroupIdError\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
        />
        
                <sw-sales-channel-defaults-select
            v-if=\\"!isProductComparison\\"
            :sales-channel=\\"salesChannel\\"
            property-name=\\"countries\\"
            :property-label=\\"$tc('sw-sales-channel.detail.labelInputCountries')\\"
            :help-text=\\"$tc('sw-sales-channel.detail.countryMultiSelectHelpText')\\"
            default-property-name=\\"countryId\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :default-property-label=\\"$tc('sw-sales-channel.detail.labelInputDefaultCountry')\\"
        />
        
                <sw-sales-channel-defaults-select
            v-if=\\"!isProductComparison\\"
            :sales-channel=\\"salesChannel\\"
            property-name=\\"languages\\"
            :property-label=\\"$tc('sw-sales-channel.detail.labelInputLanguages')\\"
            default-property-name=\\"languageId\\"
            :default-property-label=\\"$tc('sw-sales-channel.detail.labelInputDefaultLanguage')\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            property-name-in-domain=\\"languageId\\"
        />
            </sw-card>
    
        <sw-card
        v-if=\\"salesChannel\\"
        :is-loading=\\"isLoading\\"
        :title=\\"$tc('sw-sales-channel.detail.titleShippingPayment')\\"
    >
                <sw-sales-channel-defaults-select
            v-if=\\"!isProductComparison\\"
            :sales-channel=\\"salesChannel\\"
            property-name=\\"paymentMethods\\"
            :criteria=\\"paymentMethodCriteria\\"
            :property-label=\\"$tc('sw-sales-channel.detail.labelInputPaymentMethods')\\"
            default-property-name=\\"paymentMethodId\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :default-property-label=\\"$tc('sw-sales-channel.detail.labelInputDefaultPaymentMethod')\\"
        />
        
                <sw-sales-channel-defaults-select
            v-if=\\"!isProductComparison\\"
            :sales-channel=\\"salesChannel\\"
            property-name=\\"shippingMethods\\"
            :property-label=\\"$tc('sw-sales-channel.detail.labelInputShippingMethods')\\"
            default-property-name=\\"shippingMethodId\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :default-property-label=\\"$tc('sw-sales-channel.detail.labelInputDefaultShippingMethod')\\"
        />
        
                <sw-sales-channel-defaults-select
            v-if=\\"!isProductComparison\\"
            :sales-channel=\\"salesChannel\\"
            property-name=\\"currencies\\"
            :property-label=\\"$tc('sw-sales-channel.detail.labelInputCurrencies')\\"
            default-property-name=\\"currencyId\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :default-property-label=\\"$tc('sw-sales-channel.detail.labelInputDefaultCurrency')\\"
            property-name-in-domain=\\"currencyId\\"
        />
        
        <sw-radio-field
            v-model=\\"salesChannel.taxCalculationType\\"
            :label=\\"$tc('sw-sales-channel.detail.labelTaxCalculation')\\"
            block
            class=\\"sw-sales-channel-detail__tax-calculation\\"
            identification=\\"taxCalculation\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :description=\\"$tc('sw-sales-channel.detail.descriptionTaxCalculation')\\"
            :options=\\"taxCalculationTypeOptions\\"
        />
    </sw-card>
    
        <sw-sales-channel-detail-hreflang
        v-if=\\"salesChannel && isStoreFront\\"
        :sales-channel=\\"salesChannel\\"
        :disabled=\\"!acl.can('sales_channel.editor')\\"
        :is-loading=\\"isLoading\\"
    />
    
        <sw-sales-channel-detail-domains
        v-if=\\"salesChannel && isDomainAware\\"
        :sales-channel=\\"salesChannel\\"
        :disable-edit=\\"!acl.can('sales_channel.editor')\\"
        :is-loading=\\"isLoading\\"
    />
    
        <sw-card
        v-if=\\"salesChannel && isProductComparison\\"
        :is-loading=\\"isLoading\\"
        :title=\\"$tc('sw-sales-channel.detail.productComparison.storefront')\\"
    >
                <sw-entity-single-select
            v-model=\\"productExport.storefrontSalesChannelId\\"
            class=\\"sw-sales-channel-detail__product-comparison-storefront\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.storefront')\\"
            :criteria=\\"storefrontSalesChannelCriteria\\"
            label-property=\\"name\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            value-property=\\"id\\"
            entity=\\"sales_channel\\"
            required
            @change=\\"onStorefrontSelectionChange\\"
        />
        
                <sw-entity-single-select
            v-model=\\"productExport.salesChannelDomainId\\"
            class=\\"sw-sales-channel-detail__product-comparison-domain\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.storefrontDomain')\\"
            :criteria=\\"storefrontSalesChannelDomainCriteria\\"
            label-property=\\"url\\"
            value-property=\\"id\\"
            entity=\\"sales_channel_domain\\"
            required
            :disabled=\\"(!productExport.salesChannelDomainId && !productExport.storefrontSalesChannelId) || !acl.can('sales_channel.editor')\\"
            :error=\\"productExportSalesChannelDomainIdError\\"
            @change=\\"onStorefrontDomainSelectionChange\\"
        />
        
                <div
            v-if=\\"productExport.salesChannelDomain\\"
            class=\\"sw-sales-channel-detail-base__product-comparison-container\\"
        >
            <sw-entity-single-select
                v-model=\\"productExport.currencyId\\"
                :label=\\"$tc('sw-sales-channel.detail.productComparison.storefrontDomainCurrency.label')\\"
                :criteria=\\"storefrontSalesChannelCurrencyCriteria\\"
                label-property=\\"name\\"
                value-property=\\"id\\"
                required
                entity=\\"currency\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                :error=\\"productExportCurrencyIdError\\"
            />
        </div>
        
                <div
            v-if=\\"productExport.salesChannelDomain\\"
            class=\\"sw-sales-channel-detail-base__product-comparison-container\\"
        >
            <sw-entity-single-select
                v-model=\\"productExport.salesChannelDomain.languageId\\"
                :label=\\"$tc('sw-sales-channel.detail.productComparison.storefrontDomainLanguage.label')\\"
                label-property=\\"name\\"
                value-property=\\"id\\"
                entity=\\"language\\"
                :disabled=\\"true\\"
            />
            <sw-help-text
                class=\\"sw-sales-channel-detail-base__product-comparison-helptext\\"
                :text=\\"$tc('sw-sales-channel.detail.productComparison.storefrontDomainLanguage.help')\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                tooltip-position=\\"top\\"
            />
        </div>
        
                <div class=\\"sw-sales-channel-detail-base__product-comparison-container\\">
            <sw-entity-single-select
                v-model=\\"salesChannel.customerGroupId\\"
                :label=\\"$tc('sw-sales-channel.detail.productComparison.storefrontSalesChannelCustomerGroup.label')\\"
                label-property=\\"name\\"
                value-property=\\"id\\"
                entity=\\"customer_group\\"
                :disabled=\\"true\\"
            />
            <sw-help-text
                class=\\"sw-sales-channel-detail-base__product-comparison-helptext\\"
                :text=\\"$tc('sw-sales-channel.detail.productComparison.storefrontSalesChannelCustomerGroup.help')\\"
                tooltip-position=\\"top\\"
            />
        </div>
            </sw-card>
    
        <sw-card
        v-if=\\"salesChannel && isProductComparison\\"
        :is-loading=\\"isLoading\\"
        :title=\\"$tc('sw-sales-channel.detail.productComparison.settings')\\"
    >
                <sw-field
            v-model=\\"productExport.fileName\\"
            type=\\"text\\"
            validation=\\"required\\"
            required
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.fileName')\\"
            :placeholder=\\"$tc('sw-sales-channel.detail.productComparison.placeholderFileName')\\"
            :error=\\"productExportFileNameError || invalidFileNameError\\"
        />
        
                <sw-select-field
            v-model=\\"productExport.encoding\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.encoding')\\"
            :placeholder=\\"$tc('sw-sales-channel.detail.productComparison.placeholderSelectEncoding')\\"
            :options=\\"getEncodingOptions\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            required
            :error=\\"productExportEncodingError\\"
        />
        
                <sw-select-field
            v-model=\\"productExport.fileFormat\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.fileFormat')\\"
            :placeholder=\\"$tc('sw-sales-channel.detail.productComparison.placeholderSelectFileFormat')\\"
            :options=\\"getFileFormatOptions\\"
            required
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :error=\\"productExportFileFormatError\\"
        />
        
                <sw-field
            v-model=\\"productExport.includeVariants\\"
            type=\\"switch\\"
            bordered
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.includeVariants')\\"
        />
        
                <sw-select-number-field
            v-model=\\"productExport.interval\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.interval')\\"
            :options=\\"getIntervalOptions\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            @change=\\"changeInterval\\"
        />
        
                <sw-field
            v-model=\\"productExport.generateByCronjob\\"
            type=\\"switch\\"
            bordered
            :label=\\"$tc('sw-sales-channel.detail.productComparison.generateByCronjob')\\"
            :disabled=\\"disableGenerateByCronjob || !acl.can('sales_channel.editor')\\"
        />
        
                <div v-if=\\"productExport.salesChannelDomainId\\">
            <div
                v-if=\\"productExport.generatedAt\\"
                class=\\"sw-sales-channel-detail-base_general__last-generation-text\\"
            >
                {{ $tc('sw-sales-channel.detail.productComparison.lastGenerationLabel') }}{{ productExport.generatedAt | date({ hour: '2-digit', minute: '2-digit' }) }}
            </div>
            <div
                v-else
                class=\\"sw-sales-channel-detail-base_general__last-generation-text\\"
            >
                {{ $tc('sw-sales-channel.detail.productComparison.lastGenerationLabel') }}{{ $tc('sw-sales-channel.detail.productComparison.notYetGenerated') }}
            </div>
        </div>
        
                <sw-entity-single-select
            v-model=\\"productExport.productStreamId\\"
            class=\\"sw-sales-channel-detail__product-comparison-product-stream\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.productStream')\\"
            label-property=\\"name\\"
            value-property=\\"id\\"
            required
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            entity=\\"product_stream\\"
            :error=\\"productExportProductStreamIdError\\"
        />
        
    </sw-card>
    
        <sw-card
        v-if=\\"salesChannel\\"
        :is-loading=\\"isLoading\\"
        :title=\\"$tc('sw-sales-channel.detail.titleOptionsApiKey')\\"
    >
                <div
            class=\\"sw-sales-channel-detail-base__description-text\\"
            v-html=\\"$tc('sw-sales-channel.detail.textApiAccessDescription')\\"
        ></div>
        
                <sw-field
            v-if=\\"!isProductComparison\\"
            v-model=\\"salesChannel.accessKey\\"
            :label=\\"$tc('sw-sales-channel.detail.labelAccessKeyField')\\"
            :disabled=\\"true\\"
        />
        
                <div
            v-if=\\"!isProductComparison\\"
            class=\\"sw-sales-channel-detail__action-buttons\\"
        >
            <sw-button
                size=\\"small\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                class=\\"sw-sales-channel-detail-base__button-generate-keys\\"
                @click=\\"onGenerateKeys\\"
            >
                {{ $tc('sw-sales-channel.detail.buttonCreateNewApiKeys') }}
            </sw-button>

            <sw-button
                size=\\"small\\"
                class=\\"sw-sales-channel-detail-base__button-copy-key\\"
                @click=\\"copyToClipboard\\"
            >
                {{ $tc('sw-sales-channel.detail.buttonCopyApiKeyButton') }}
            </sw-button>
        </div>
        
                        <sw-field
            v-if=\\"isProductComparison\\"
            v-model=\\"productExport.accessKey\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.accessKey')\\"
            :disabled=\\"true\\"
            :copyable=\\"true\\"
        />
        
                <sw-field
            v-if=\\"isProductComparison && productExport.salesChannelDomainId\\"
            v-model=\\"productComparisonAccessUrl\\"
            :label=\\"$tc('sw-sales-channel.detail.productComparison.accessUrl')\\"
            :disabled=\\"true\\"
            :copyable=\\"true\\"
        />
        
                <div class=\\"sw-sales-channel-detail__action-button\\">
            <sw-button
                v-if=\\"isProductComparison\\"
                variant=\\"ghost\\"
                :disabled=\\"!acl.can('sales_channel.editor')\\"
                size=\\"small\\"
                class=\\"sw-sales-channel-detail-base__button-generate-keys\\"
                @click=\\"onGenerateProductExportKey\\"
            >
                {{ $tc('sw-sales-channel.detail.productComparison.buttonCreateNewAccessKey') }}
            </sw-button>
        </div>
                    </sw-card>
    
        <sw-card
        v-if=\\"salesChannel\\"
        :title=\\"$tc('sw-sales-channel.detail.titleStatus')\\"
        :is-loading=\\"isLoading\\"
    >
                <div class=\\"sw-sales-channel-detail-base__description-text\\">
            {{ $tc('sw-sales-channel.detail.textActiveDescription') }}
        </div>
        
                <sw-field
            v-model=\\"salesChannel.active\\"
            type=\\"switch\\"
            :label=\\"$tc('sw-sales-channel.detail.labelInputActive')\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            @change=\\"onToggleActive\\"
        />
        
                <h4 class=\\"sw-sales-channel-detail-base__headline-text\\">
            {{ $tc('sw-sales-channel.detail.maintenanceModeTitle') }}
        </h4>

        <div class=\\"sw-sales-channel-detail-base__description-text\\">
            {{ $tc('sw-sales-channel.detail.maintenanceModeDescription') }}
        </div>
        
                <sw-field
            v-model=\\"salesChannel.maintenance\\"
            type=\\"switch\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            :label=\\"$tc('sw-sales-channel.detail.labelMaintenanceActive')\\"
        />
        
                <sw-multi-tag-ip-select
            v-model=\\"maintenanceIpWhitelist\\"
            :is-loading=\\"isLoading\\"
            :disabled=\\"!acl.can('sales_channel.editor')\\"
            class=\\"sw-order-user-card__tag-select\\"
            :label=\\"$tc('sw-sales-channel.detail.ipAddressWhitleList')\\"
            :help-text=\\"$tc('sw-sales-channel.detail.ipAddressWhitleListHelpText')\\"
            :known-ips=\\"knownIps\\"
        />
        
                <div class=\\"sw-sales-channel-detail-base__settings-link\\">
            <router-link
                v-if=\\"acl.can('sales_channel.editor')\\"
                :to=\\"{ name: 'sw.settings.basic.information.index'}\\"
                class=\\"sw-card__quick-link\\"
            >
                {{ $tc('sw-sales-channel.detail.basicinformationLink') }}
                <sw-icon
                    name=\\"default-arrow-simple-right\\"
                    small
                />
            </router-link>
        </div>
            </sw-card>
    
        <sw-card
        v-if=\\"salesChannel && acl.can('sales_channel.deleter')\\"
        :title=\\"$tc('sw-sales-channel.detail.deleteModalTitle')\\"
        :is-loading=\\"isLoading\\"
    >
        <sw-container
            columns=\\"1fr 175px\\"
            gap=\\"0px 30px\\"
            class=\\"sw-sales-channel-detail-base__delete-sales-channel\\"
        >
            <div class=\\"sw-sales-channel-detail-base__description-text\\">
                <strong>{{ $tc('global.default.warning') }}</strong>
                {{ $tc('sw-sales-channel.detail.textDeleteSalesChannelWarning') }}
            </div>

                        <div class=\\"sw-sales-channel-detail-base__button-delete\\">
                <sw-button
                    variant=\\"danger\\"
                    size=\\"small\\"
                    @click=\\"showDeleteModal = true\\"
                >
                    {{ $tc('sw-sales-channel.detail.buttonDelete') }}
                </sw-button>
            </div>
                    </sw-container>

                <sw-modal
            v-if=\\"showDeleteModal\\"
            ref=\\"modal\\"
            class=\\"sw-sales-channel-detail-base__delete-modal\\"
            variant=\\"small\\"
            :title=\\"$tc('sw-sales-channel.detail.deleteModalTitle')\\"
            @modal-close=\\"onCloseDeleteModal\\"
        >

                        <p class=\\"sw-sales-channel-detail-base__delete-modal-confirm-text\\">
                {{ $tc('sw-sales-channel.detail.textConfirmDelete') }}
            </p>
            <p class=\\"sw-sales-channel-detail-base__delete-modal-name\\">
                <strong>{{ placeholder(salesChannel, 'name') }}</strong>
            </p>
            <p>{{ $tc('sw-sales-channel.detail.textDeleteInfo') }}</p>
            
                        <template slot=\\"modal-footer\\">
                                <sw-button
                    size=\\"small\\"
                    @click=\\"onCloseDeleteModal\\"
                >
                    {{ $tc('sw-sales-channel.detail.buttonCloseDeleteModal') }}
                </sw-button>
                
                                <sw-button
                    size=\\"small\\"
                    variant=\\"danger\\"
                    @click=\\"onConfirmDelete\\"
                >
                    {{ $tc('sw-sales-channel.detail.buttonConfirmDelete') }}
                </sw-button>
                            </template>
                    </sw-modal>
            </sw-card>
    
        <sw-card
        v-if=\\"salesChannel && customFieldSets.length > 0\\"
        :title=\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\"
        :is-loading=\\"isLoading\\"
    >
        <sw-custom-field-set-renderer
            :entity=\\"salesChannel\\"
            :sets=\\"customFieldSets\\"
        />
    </sw-card>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-search-bar-item 1`] = `
"<li
    class=\\"sw-search-bar-item\\"
    :class=\\"componentClasses\\"
    @mouseenter=\\"onMouseEnter($event)\\"
>

        <router-link
        v-if=\\"type === 'customer'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.customer.detail.base', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"\`\${item.customerNumber} - \${item.firstName} \${item.lastName}\`\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'product'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.product.detail.base', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"\`\${item.productNumber} - \${item.name}\`\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'category'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.category.detail', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"item.name\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'order'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.order.detail.base', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"\`\${item.orderNumber} - \${item.orderCustomer.firstName} \${item.orderCustomer.lastName}\`\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'media'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.media.index', params: { folderId: item.mediaFolderId }, query: { term: item.fileName } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"item | mediaName\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'cms_page'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.cms.detail.base', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"item.name\\"
            />
        </span>
        
    </router-link>
    
        <router-link
        v-else-if=\\"type === 'landing_page'\\"
        ref=\\"routerLink\\"
        class=\\"sw-search-bar-item__link\\"
        :to=\\"{ name: 'sw.category.landingPageDetail.base', params: { id: item.id } }\\"
    >

                <span class=\\"sw-search-bar-item__label\\">
            <sw-highlight-text
                :search-term=\\"searchTerm\\"
                :text=\\"item.name\\"
            />
        </span>
        
    </router-link>
    </li>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-select-rule-create 1`] = `
"<div class=\\"sw-select-rule-create\\">
    <sw-entity-multi-select
        v-if=\\"rules !== null\\"
        v-model=\\"collection\\"
        v-bind=\\"$attrs\\"
    >

        <template #before-item-list>
                        <div
                class=\\"sw-select-rule-create__create-rule-item sw-select-result\\"
                @click=\\"openCreateRuleModal\\"
            >
                {{ $tc('sw-select-rule-create.addNewRule') }}
            </div>
                    </template>

    </sw-entity-multi-select>

        <sw-entity-single-select
        v-else
        entity=\\"rule\\"
        :criteria=\\"ruleFilter\\"
        :value=\\"ruleId\\"
        v-bind=\\"$attrs\\"
        @change=\\"onSelectRule\\"
    >
        <template #before-item-list>
                        <div
                class=\\"sw-select-rule-create__create-rule-item sw-select-result\\"
                @click=\\"openCreateRuleModal\\"
            >
                {{ $tc('sw-select-rule-create.addNewRule') }}
            </div>
                    </template>
        <template #result-item=\\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\\">
                        <slot
                name=\\"result-item\\"
                v-bind=\\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\\"
            >
                <li
                    is=\\"sw-select-result\\"
                    :selected=\\"isSelected(item)\\"
                    v-bind=\\"{ item, index }\\"
                    @item-select=\\"setValue\\"
                >
                                        <slot
                        name=\\"result-label-property\\"
                        v-bind=\\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, getKey }\\"
                    >
                        <sw-highlight-text
                            v-if=\\"highlightSearchTerm\\"
                            :text=\\"getKey(item, labelProperty) || getKey(item, \`translated.\${labelProperty}\`)\\"
                            :search-term=\\"searchTerm\\"
                        />
                        <template v-else>
                            {{ getKey(item, labelProperty) || getKey(item, \`translated.\${labelProperty}\`) }}
                        </template>
                    </slot>
                                    </li>
            </slot>
                    </template>
    </sw-entity-single-select>
    
        <slot
        name=\\"rule-modal\\"
        v-bind=\\"{ showRuleModal, onSaveRule, onCloseRuleModal }\\"
    >
                <sw-rule-modal
            v-if=\\"showRuleModal\\"
            @save=\\"onSaveRule\\"
            @modal-close=\\"onCloseRuleModal\\"
            :allowedRuleScopes=\\"['cart', 'checkout', 'global', 'lineItem']\\">
        </sw-rule-modal>
            </slot>
    </div>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-settings-country-list 1`] = `
"<sw-page class=\\"sw-settings-country-list\\">

        <template slot=\\"search-bar\\">
        <sw-search-bar
            initial-search-type=\\"country\\"
            :placeholder=\\"$tc('sw-settings-country.general.placeholderSearchBar')\\"
            :initial-search=\\"term\\"
            @search=\\"onSearch\\"
        />
    </template>
    
        <template slot=\\"smart-bar-header\\">
                <h2>
                        {{ $tc('sw-settings.index.title') }} <sw-icon
                name=\\"small-arrow-medium-right\\"
                small
            /> {{ $tc('sw-settings-country.list.textHeadline') }}
            
                        <span
                v-if=\\"!isLoading\\"
                class=\\"sw-page__smart-bar-amount\\"
            >
                ({{ total }})
            </span>
                    </h2>
            </template>
    
        <template slot=\\"smart-bar-actions\\">
                <sw-button
            v-tooltip.bottom=\\"{
                message: $tc('sw-privileges.tooltip.warning'),
                disabled: acl.can('country.creator'),
                showOnDisabledElements: true
            }\\"
            class=\\"sw-settings-country-list__button-create\\"
            variant=\\"primary\\"
            :router-link=\\"{ name: 'sw.settings.country.create' }\\"
            :disabled=\\"!acl.can('country.creator')\\"
        >
            {{ $tc('sw-settings-country.list.buttonAddCountry') }}
        </sw-button>
            </template>
    
        <sw-language-switch
        slot=\\"language-switch\\"
        @on-change=\\"onChangeLanguage\\"
    />
    
        <sw-card-view slot=\\"content\\">
                <sw-card
            v-if=\\"country\\"
            :is-loading=\\"isLoading\\"
        >
                        <template #grid>
                                <sw-entity-listing
                    ref=\\"swSettingsCountryGrid\\"
                    class=\\"sw-settings-country-list-grid\\"
                    :items=\\"country\\"
                    :columns=\\"getCountryColumns()\\"
                    :repository=\\"countryRepository\\"
                    :full-page=\\"false\\"
                    detail-route=\\"sw.settings.country.detail\\"
                    :show-selection=\\"showSelection\\"
                    :is-loading=\\"isLoading\\"
                    :allow-view=\\"acl.can('country.viewer')\\"
                    :allow-edit=\\"acl.can('country.editor')\\"
                    :allow-inline-edit=\\"acl.can('country.editor')\\"
                    :allow-delete=\\"acl.can('country.deleter')\\"
                    @inline-edit-save=\\"onInlineEditSave\\"
                >

                    <template #column-active=\\"{ item, isInlineEdit }\\">
                        <template v-if=\\"isInlineEdit\\">
                                                        <sw-field
                                v-model=\\"item.active\\"
                                type=\\"checkbox\\"
                            />
                                                    </template>
                        <template v-else>
                                                        <sw-icon
                                v-if=\\"item.active\\"
                                name=\\"small-default-checkmark-line-medium\\"
                                small
                                class=\\"is--active\\"
                            />
                            <sw-icon
                                v-else
                                name=\\"small-default-x-line-medium\\"
                                small
                                class=\\"is--inactive\\"
                            />
                                                    </template>
                    </template>

                                        <template #actions=\\"{ item }\\">
                                                <sw-context-menu-item
                            :router-link=\\"{ name: 'sw.settings.country.detail', params: { id: item.id, edit: 'edit' }}\\"
                            :disabled=\\"!acl.can('country.editor') && !acl.can('country.viewer')\\"
                            class=\\"sw-country-list__edit-action\\"
                        >
                            {{ detailPageLinkText }}
                        </sw-context-menu-item>
                        
                                                <sw-context-menu-item
                            class=\\"sw-country-list__delete-action\\"
                            variant=\\"danger\\"
                            :disabled=\\"!acl.can('country.deleter')\\"
                            @click=\\"onDelete(item.id)\\"
                        >
                            {{ $tc('sw-settings-country.list.contextMenuDelete') }}
                        </sw-context-menu-item>
                                            </template>
                    
                                        <template #action-modals=\\"{ item }\\">
                                                <sw-modal
                            v-if=\\"showDeleteModal === item.id\\"
                            :title=\\"$tc('global.default.warning')\\"
                            variant=\\"small\\"
                            @modal-close=\\"onCloseDeleteModal\\"
                        >
                                                        <p class=\\"sw-settings-country-list__confirm-delete-text\\">
                                {{ $tc('sw-settings-country.list.textDeleteConfirm', 0, { name: item.name }) }}
                            </p>
                            
                                                        <template #modal-footer>
                                                                <sw-button
                                    size=\\"small\\"
                                    @click=\\"onCloseDeleteModal\\"
                                >
                                    {{ $tc('sw-settings-country.list.buttonCancel') }}
                                </sw-button>
                                
                                                                <sw-button
                                    variant=\\"danger\\"
                                    size=\\"small\\"
                                    @click=\\"onConfirmDelete(item.id)\\"
                                >
                                    {{ $tc('sw-settings-country.list.buttonDelete') }}
                                </sw-button>
                                                            </template>
                                                    </sw-modal>
                                            </template>
                                    </sw-entity-listing>
                            </template>
                    </sw-card>
            </sw-card-view>
    </sw-page>
    "
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-settings-document-list 1`] = `
"<sw-page class=\\"sw-settings-document-list\\">

        <template slot=\\"search-bar\\">
        <sw-search-bar
            :placeholder=\\"$tc('sw-settings-document.general.placeholderSearchBar')\\"
            :search-type=\\"$tc('sw-settings-document.general.mainMenuItemGeneral')\\"
            @search=\\"onSearch\\"
        />
    </template>
    
        <template slot=\\"smart-bar-header\\">
                <h2>
                        {{ $tc('sw-settings.index.title') }}
            <sw-icon
                name=\\"small-arrow-medium-right\\"
                small
            /> {{ $tc('sw-settings-document.list.textHeadline') }}
            
                        <span
                v-if=\\"!isLoading\\"
                class=\\"sw-page__smart-bar-amount\\"
            >
                ({{ total }})
            </span>
                    </h2>
            </template>
    
        <template slot=\\"smart-bar-actions\\">
                <sw-button
            v-tooltip.bottom=\\"{
                message: $tc('sw-privileges.tooltip.warning'),
                disabled: acl.can('document.creator'),
                showOnDisabledElements: true
            }\\"
            :router-link=\\"{ name: 'sw.settings.document.create' }\\"
            :disabled=\\"!acl.can('document.creator')\\"
            class=\\"sw-settings-document-list__add-document\\"
            variant=\\"primary\\"
        >
            {{ $tc('sw-settings-document.list.buttonAddDocument') }}
        </sw-button>
            </template>
    
        <sw-card-view slot=\\"content\\">
                <sw-card :is-loading=\\"isLoading\\">
                        <sw-grid
                slot=\\"grid\\"
                class=\\"sw-settings-document-list-grid\\"
                :items=\\"items\\"
                :selectable=\\"false\\"
                table
            >
                <template
                    slot=\\"columns\\"
                    slot-scope=\\"{ item }\\"
                >
                    
                                        <sw-grid-column
                        class=\\"sw-document-list__column-name\\"
                        flex=\\"minmax(100px, 1fr)\\"
                        :label=\\"$tc('sw-settings-document.list.columnName')\\"
                    >

                                                <router-link
                            :title=\\"$tc('sw-settings-document.list.contextMenuEdit')\\"
                            :to=\\"{ name: 'sw.settings.document.detail', params: { id: item.id } }\\"
                        >
                                                        {{ item.name }}
                                                    </router-link>
                                            </sw-grid-column>
                    
                                        <sw-grid-column
                        v-if=\\"item.documentType.translated\\"
                        class=\\"sw-document-list__column-type\\"
                        flex=\\"minmax(100px, 1fr)\\"
                        :label=\\"$tc('sw-settings-document.list.columnType')\\"
                    >
                        {{ item.documentType.translated.name }}
                    </sw-grid-column>
                    
                                        <sw-grid-column
                        flex=\\"minmax(100px, 1fr)\\"
                        :label=\\"$tc('sw-settings-document.list.columnAssignment')\\"
                    >
                                                <div
                            v-if=\\"item.global\\"
                            class=\\"sw-list sw-document-list__label-wrapper\\"
                        >
                            <sw-label size=\\"medium\\">
                                {{ $tc('sw-settings-document.list.global') }}
                            </sw-label>
                        </div>
                        <ul
                            v-if=\\"!item.global\\"
                            class=\\"sw-list sw-document-list__label-wrapper\\"
                        >
                            <li
                                v-for=\\"(salesChannel, index) in item.salesChannels\\"
                                :key=\\"index\\"
                            >
                                <sw-label
                                    v-if=\\"salesChannel.salesChannel && salesChannel.salesChannel.translated\\"
                                    size=\\"medium\\"
                                >
                                    {{ salesChannel.salesChannel.translated.name }}
                                </sw-label>
                            </li>
                        </ul>
                                            </sw-grid-column>
                    
                                        <sw-grid-column
                        flex=\\"minmax(70px, 70px)\\"
                        align=\\"center\\"
                        label=\\"\\"
                    >
                        <sw-context-button>

                                                        <sw-context-menu-item
                                class=\\"sw-document-list__edit-action\\"
                                :disabled=\\"!acl.can('document.editor')\\"
                                :router-link=\\"{ name: 'sw.settings.document.detail', params: { id: item.id } }\\"
                            >
                                {{ $tc('sw-settings-document.list.contextMenuEdit') }}
                            </sw-context-menu-item>
                            
                                                        <sw-context-menu-item
                                variant=\\"danger\\"
                                class=\\"sw-document-list__delete-action\\"
                                :disabled=\\"!acl.can('document.deleter')\\"
                                @click=\\"onDelete(item.id)\\"
                            >
                                {{ $tc('sw-settings-document.list.buttonDelete') }}
                            </sw-context-menu-item>
                                                    </sw-context-button>
                    </sw-grid-column>
                    
                                        <sw-modal
                        v-if=\\"showDeleteModal === item.id\\"
                        :title=\\"$tc('global.default.warning')\\"
                        variant=\\"small\\"
                        @modal-close=\\"onCloseDeleteModal\\"
                    >
                                                <p>
                            {{ $tc('sw-settings-document.list.textDeleteConfirm', 0, { name: item.name }) }}
                        </p>
                        
                                                <template slot=\\"modal-footer\\">
                                                        <sw-button
                                size=\\"small\\"
                                @click=\\"onCloseDeleteModal\\"
                            >
                                {{ $tc('sw-settings-document.list.buttonCancel') }}
                            </sw-button>
                            
                                                        <sw-button
                                variant=\\"danger\\"
                                size=\\"small\\"
                                @click=\\"onConfirmDelete(item.id)\\"
                            >
                                {{ $tc('sw-settings-document.list.buttonDelete') }}
                            </sw-button>
                                                    </template>
                                            </sw-modal>
                                                        </template>

                                <sw-pagination
                    slot=\\"pagination\\"
                    :page=\\"page\\"
                    :limit=\\"limit\\"
                    :total=\\"total\\"
                    :total-visible=\\"7\\"
                    @page-change=\\"onPageChange\\"
                />
                            </sw-grid>
                    </sw-card>
            </sw-card-view>
    </sw-page>
    "
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-settings-number-range-list 1`] = `
"<sw-page class=\\"sw-settings-number-range-list\\">

        <template slot=\\"search-bar\\">
        <sw-search-bar
            initial-search-type=\\"number_range\\"
            :placeholder=\\"$tc('sw-settings-number-range.general.placeholderSearchBar')\\"
            :initial-search=\\"term\\"
            @search=\\"onSearch\\"
        />
    </template>
    
        <template slot=\\"smart-bar-header\\">
                <h2>
                        {{ $tc('sw-settings.index.title') }}
            <sw-icon
                name=\\"small-arrow-medium-right\\"
                small
            /> {{ $tc('sw-settings-number-range.list.textHeadline') }}
            
                        <span
                v-if=\\"!isLoading\\"
                class=\\"sw-page__smart-bar-amount\\"
            >
                ({{ total }})
            </span>
                    </h2>
            </template>
    
        <template slot=\\"language-switch\\">
        <sw-language-switch @on-change=\\"onChangeLanguage\\" />
    </template>
    
        <template slot=\\"smart-bar-actions\\">
                <sw-button
            v-tooltip=\\"{
                message: $tc('sw-privileges.tooltip.warning'),
                disabled: acl.can('number_ranges.creator'),
                showOnDisabledElements: true
            }\\"
            class=\\"sw-number-range-list__add-number-range\\"
            variant=\\"primary\\"
            :disabled=\\"!acl.can('number_ranges.creator')\\"
            :router-link=\\"{ name: 'sw.settings.number.range.create' }\\"
        >
            {{ $tc('sw-settings-number-range.list.buttonAddNumberRange') }}
        </sw-button>
            </template>
    
        <sw-card-view slot=\\"content\\">
                <sw-card
            v-if=\\"numberRange\\"
            :is-loading=\\"isLoading\\"
        >
                        <template #grid>
                                <sw-entity-listing
                    ref=\\"swSettingsNumberRangeGrid\\"
                    class=\\"sw-settings-number-range-list-grid\\"
                    :items=\\"numberRange\\"
                    :columns=\\"getNumberRangeColumns()\\"
                    :repository=\\"numberRangeRepository\\"
                    :disable-data-fetching=\\"true\\"
                    :sort-by=\\"sortBy\\"
                    :sort-direction=\\"sortDirection\\"
                    :full-page=\\"false\\"
                    detail-route=\\"sw.settings.number.range.detail\\"
                    :show-selection=\\"false\\"
                    :is-loading=\\"isLoading\\"
                    :allow-edit=\\"acl.can('number_ranges.editor')\\"
                    :allow-inline-edit=\\"acl.can('number_ranges.editor')\\"
                    :allow-delete=\\"acl.can('number_ranges.deleter')\\"
                    :allow-view=\\"acl.can('number_ranges.viewer')\\"
                    @page-change=\\"onPageChange\\"
                    @column-sort=\\"onSortColumn\\"
                >
                                        <template #column-global=\\"{ item }\\">
                        <sw-label
                            v-if=\\"item.type.global || item.global\\"
                            class=\\"sw-settings-number-range-list__columns-assignment-tag\\"
                            size=\\"medium\\"
                        >
                            {{ $tc('sw-settings-number-range.list.global') }}
                        </sw-label>

                        <template v-if=\\"!item.type.global && !item.global\\">
                            <sw-label
                                v-for=\\"numberRangeSalesChannel in item.numberRangeSalesChannels\\"
                                :key=\\"numberRangeSalesChannel.id\\"
                                class=\\"sw-settings-number-range-list__columns-assignment-tag\\"
                                size=\\"medium\\"
                            >
                                {{ numberRangeSalesChannel.salesChannel.translated.name }}
                            </sw-label>
                        </template>
                    </template>
                    
                                        <template #actions=\\"{ item }\\">
                                                <sw-context-menu-item
                            class=\\"sw-entity-listing__context-menu-edit-action\\"
                            :disabled=\\"!acl.can('number_ranges.editor')\\"
                            :router-link=\\"{ name: 'sw.settings.number.range.detail', params: { id: item.id, edit: 'edit' }}\\"
                        >
                            {{ $tc('sw-settings-number-range.list.contextMenuEdit') }}
                        </sw-context-menu-item>
                        
                                                <sw-context-menu-item
                            class=\\"sw-entity-listing__context-menu-edit-delete\\"
                            variant=\\"danger\\"
                            :disabled=\\"!acl.can('number_ranges.deleter')\\"
                            @click=\\"onDelete(item.id)\\"
                        >
                            {{ $tc('sw-settings-number-range.list.contextMenuDelete') }}
                        </sw-context-menu-item>
                                            </template>
                    
                                        <template #action-modals=\\"{ item }\\">
                                                <sw-modal
                            v-if=\\"showDeleteModal === item.id\\"
                            :title=\\"$tc('global.default.warning')\\"
                            variant=\\"small\\"
                            @modal-close=\\"onCloseDeleteModal\\"
                        >
                                                        <p class=\\"sw-settings-number-range-list__confirm-delete-text\\">
                                {{ $tc('sw-settings-number-range.list.textDeleteConfirm', 0, { name: item.name }) }}
                            </p>
                            
                                                        <template #modal-footer>
                                                                <sw-button
                                    size=\\"small\\"
                                    @click=\\"onCloseDeleteModal\\"
                                >
                                    {{ $tc('sw-settings-number-range.list.buttonCancel') }}
                                </sw-button>
                                
                                                                <sw-button
                                    variant=\\"danger\\"
                                    size=\\"small\\"
                                    @click=\\"onConfirmDelete(item.id)\\"
                                >
                                    {{ $tc('sw-settings-number-range.list.buttonDelete') }}
                                </sw-button>
                                                            </template>
                                                    </sw-modal>
                                            </template>
                                    </sw-entity-listing>
                                <sw-empty-state
                    v-if=\\"!isLoading && !total\\"
                    :title=\\"$tc('sw-settings-number-range.list.messageEmpty')\\"
                />
                                            </template>
                    </sw-card>
            </sw-card-view>
    </sw-page>
    "
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-settings-payment-list 1`] = `
"<sw-page class=\\"sw-settings-payment-list\\">

        <template #search-bar>
        <sw-search-bar
            initial-search-type=\\"payment_method\\"
            :placeholder=\\"$tc('sw-settings-payment.general.placeholderSearchBar')\\"
            :initial-search=\\"term\\"
            @search=\\"onSearch\\"
        />
    </template>
    
        <template #smart-bar-header>
                <h2>
                        {{ $tc('sw-settings.index.title') }} <sw-icon
                name=\\"small-arrow-medium-right\\"
                small
            /> {{ $tc('sw-settings-payment.list.textHeadline') }}
            
                        <span
                v-if=\\"!isLoading\\"
                class=\\"sw-page__smart-bar-amount\\"
            >
                ({{ total }})
            </span>
                    </h2>
            </template>
    
        <template #smart-bar-actions>
                <sw-button
            v-tooltip=\\"{
                message: $tc('sw-privileges.tooltip.warning'),
                disabled: acl.can('payment.creator'),
                showOnDisabledElements: true
            }\\"
            class=\\"sw-settings-payment-list__button-create\\"
            :disabled=\\"!acl.can('payment.creator')\\"
            :router-link=\\"{ name: 'sw.settings.payment.create' }\\"
            variant=\\"primary\\"
        >
            {{ $tc('sw-settings-payment.list.buttonAddPaymentMethod') }}
        </sw-button>
            </template>
    
        <template #language-switch>
        <sw-language-switch @on-change=\\"onChangeLanguage\\" />
    </template>
    
        <template #content>
                <div class=\\"sw-settings-payment-list__content\\">
                        <sw-entity-listing
                v-if=\\"payment\\"
                ref=\\"swSettingsPaymentGrid\\"
                class=\\"sw-settings-payment-list-grid\\"
                :items=\\"payment\\"
                :columns=\\"getPaymentColumns()\\"
                :repository=\\"paymentRepository\\"
                detail-route=\\"sw.settings.payment.detail\\"
                :show-selection=\\"false\\"
                :allow-inline-edit=\\"acl.can('payment.editor')\\"
                :is-loading=\\"isLoading\\"
                :disable-data-fetching=\\"true\\"
                :sort-by=\\"sortBy\\"
                :sort-direction=\\"sortDirection\\"
                @column-sort=\\"onSortColumn\\"
                @page-change=\\"onPageChange\\"
                @inline-edit-save=\\"onInlineEditSave\\"
            >

                                <template #column-extension=\\"{ item }\\">
                                        <span class=\\"sw-data-grid__cell-value\\">
                        {{ getExtensionName(item) }}
                    </span>
                                    </template>
                
                                <template #column-active=\\"{ item, isInlineEdit }\\">
                    <template v-if=\\"isInlineEdit\\">
                                                <sw-field
                            v-model=\\"item.active\\"
                            type=\\"checkbox\\"
                        />
                                            </template>
                    <template v-else>
                                                <sw-icon
                            v-if=\\"item.active\\"
                            name=\\"small-default-checkmark-line-medium\\"
                            small
                            class=\\"is--active\\"
                        />
                        <sw-icon
                            v-else
                            name=\\"small-default-x-line-medium\\"
                            small
                            class=\\"is--inactive\\"
                        />
                                            </template>
                </template>
                
                                <template #column-position=\\"{ item }\\">
                    <sw-data-grid-column-position
                        v-model=\\"payment\\"
                        :item=\\"item\\"
                        :disabled=\\"disablePositioning || !acl.can('payment.editor')\\"
                        :show-value=\\"true\\"
                        @position-changed=\\"onPositionChanged\\"
                    />
                </template>
                
                                <template #actions=\\"{ item }\\">
                                        <sw-context-menu-item
                        class=\\"sw-settings-payment-list__edit-action\\"
                        :disabled=\\"!acl.can('payment.editor')\\"
                        :router-link=\\"{ name: 'sw.settings.payment.detail', params: { id: item.id, edit: 'edit' }}\\"
                    >
                        {{ $tc('sw-settings-payment.list.contextMenuEdit') }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        class=\\"sw-settings-payment-list__delete-action\\"
                        :disabled=\\"!acl.can('payment.deleter')\\"
                        variant=\\"danger\\"
                        @click=\\"onDelete(item.id)\\"
                    >
                        {{ $tc('sw-settings-payment.list.contextMenuDelete') }}
                    </sw-context-menu-item>
                                    </template>
                
                                <template #action-modals=\\"{ item }\\">
                                        <sw-modal
                        v-if=\\"showDeleteModal === item.id\\"
                        :title=\\"$tc('global.default.warning')\\"
                        variant=\\"small\\"
                        @modal-close=\\"onCloseDeleteModal\\"
                    >
                                                <p class=\\"sw-settings-payment-list__confirm-delete-text\\">
                            {{ $tc('sw-settings-payment.list.textDeleteConfirm', 0, { name: item.name }) }}
                        </p>
                        
                                                <template #modal-footer>
                                                        <sw-button
                                size=\\"small\\"
                                @click=\\"onCloseDeleteModal\\"
                            >
                                {{ $tc('sw-settings-payment.list.buttonCancel') }}
                            </sw-button>
                            
                                                        <sw-button
                                variant=\\"danger\\"
                                size=\\"small\\"
                                @click=\\"onConfirmDelete(item.id)\\"
                            >
                                {{ $tc('sw-settings-payment.list.buttonDelete') }}
                            </sw-button>
                                                    </template>
                                            </sw-modal>
                                    </template>
                            </sw-entity-listing>
                    </div>
            </template>
    </sw-page>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-settings-search-searchable-content 1`] = `
"<sw-card
    :title=\\"$tc('sw-settings-search.generalTab.labelSearchableContent')\\"
>
        <label class=\\"sw-field sw-settings-search__searchable-content-title\\">
        {{ $tc('sw-settings-search.generalTab.textDescriptionSearchableContent') }}
    </label>
    
        <sw-container
        class=\\"sw-field\\"
        columns=\\"repeat(auto-fit, minmax(100px, 1fr))\\"
        align=\\"center\\"
        gap=\\"0px 30px\\"
    >
        <div class=\\"sw-settings-search__searchable-content-button-group\\">
                        <sw-button
                v-if=\\"defaultTab !== tabNames.generalTab\\"
                class=\\"sw-settings-search__searchable-content-add-button\\"
                variant=\\"ghost\\"
                size=\\"small\\"
                :disabled=\\"!acl.can('product_search_config.creator')\\"
                @click=\\"onAddNewConfig\\"
            >
                {{ $tc('sw-settings-search.generalTab.buttonAddContent') }}
            </sw-button>
            
                        <sw-button
                v-if=\\"defaultTab !== tabNames.customTab\\"
                class=\\"sw-settings-search__searchable-content-reset-button\\"
                size=\\"small\\"
                :disabled=\\"isEnabledReset || !acl.can('product_search_config.editor')\\"
                @click=\\"onResetToDefault\\"
            >
                {{ $tc('sw-settings-search.generalTab.buttonResetDefault') }}
            </sw-button>
                    </div>

                        <div class=\\"sw-settings-search__searchable-content-link-text\\">

                        <a
                class=\\"sw-settings-search__searchable-content-show-example-link\\"
                @click=\\"onShowExampleModal\\"
            >
                {{ $tc('sw-settings-search.generalTab.linkExample') }}
                <sw-icon
                    name=\\"default-arrow-simple-right\\"
                    small
                />
            </a>
            
                        <router-link
                class=\\"sw-settings-search__searchable-content-rebuild-link\\"
                :to=\\"{ name: 'sw.settings.search.index.liveSearch' }\\"
            >
                {{ $tc('sw-settings-search.liveSearchTab.linkRebuildSearchIndex') }}
                <sw-icon
                    name=\\"default-arrow-simple-right\\"
                    small
                />
            </router-link>
            
        </div>
        
                <sw-settings-search-example-modal
            v-if=\\"showExampleModal\\"
            @modal-close=\\"onCloseExampleModal\\"
        />
                    </sw-container>
    
        <sw-tabs :default-item=\\"defaultTab\\">
        <template #default=\\"{ active }\\">
                        <sw-tabs-item
                class=\\"sw-settings-search__searchable-content-tab-title\\"
                name=\\"general\\"
                :active-tab=\\"active\\"
                @click=\\"onChangeTab(tabNames.generalTab)\\"
            >
                {{ $tc('sw-settings-search.generalTab.labelGeneralTab') }}
            </sw-tabs-item>
            
                        <sw-tabs-item
                class=\\"sw-settings-search__searchable-content-tab-title\\"
                name=\\"customfields\\"
                @click=\\"onChangeTab(tabNames.customTab)\\"
            >
                {{ $tc('sw-settings-search.generalTab.labelCustomFieldsTab') }}
            </sw-tabs-item>
                    </template>

        <template #content=\\"{ active }\\">
                        <sw-settings-search-searchable-content-general
                v-if=\\"active === tabNames.generalTab\\"
                :is-empty=\\"isListEmpty\\"
                :is-loading=\\"isLoading\\"
                :columns=\\"getProductSearchFieldColumns\\"
                :repository=\\"productSearchFieldRepository\\"
                :search-configs=\\"searchConfigFields\\"
                :field-configs=\\"fieldConfigs\\"
                @data-load=\\"loadData\\"
                @config-save=\\"saveConfig\\"
            />
            
                        <sw-settings-search-searchable-content-customfields
                v-if=\\"active === tabNames.customTab\\"
                :is-empty=\\"isListEmpty\\"
                :is-loading=\\"isLoading\\"
                :columns=\\"getProductSearchFieldColumns\\"
                :repository=\\"productSearchFieldRepository\\"
                :search-configs=\\"searchConfigFields\\"
                @data-load=\\"loadData\\"
                @config-add=\\"onAddNewConfig\\"
                @config-save=\\"saveConfig\\"
                @config-delete=\\"deleteConfig\\"
            />
                    </template>
    </sw-tabs>
    </sw-card>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-snippet-field-edit-modal 1`] = `
"<sw-modal
    class=\\"sw-snippet-field-edit-modal\\"
    :title=\\"modalTitle\\"
    :is-loading=\\"isLoading\\"
    @modal-close=\\"closeModal\\"
>
            <sw-field
        type=\\"text\\"
        :value=\\"translationKey\\"
        disabled
        :label=\\"$tc('global.sw-snippet-field-edit-modal.labelName')\\"
    />
            <sw-field
        v-for=\\"(snippet, index) in editableSnippets\\"
        :key=\\"snippet.setId\\"
        v-model=\\"snippet.value\\"
        v-tooltip.bottom=\\"getNoPermissionsTooltip('snippet.editor')\\"
        :type=\\"fieldType\\"
        :class=\\"\`sw-snippet-field-edit-modal__translation-field--\${index}\`\\"
        :disabled=\\"!acl.can('snippet.editor')\\"
        :label=\\"$tc('sw-settings-snippet.detail.labelContent', 0, { name: snippetSets.get(snippet.setId).name })\\"
        :placeholder=\\"snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')\\"
    />
        
    <template #modal-footer>
                        <sw-button
            size=\\"small\\"
            @click=\\"closeModal\\"
        >
            {{ $tc('global.sw-modal.labelClose') }}
        </sw-button>
                            <sw-button
                v-tooltip=\\"getNoPermissionsTooltip('snippet.editor')\\"
                class=\\"sw-snippet-field-edit-modal__save-action\\"
                size=\\"small\\"
                variant=\\"primary\\"
                :disabled=\\"!acl.can('snippet.editor')\\"
                @click=\\"onSave\\"
            >
                {{ $tc('global.default.save') }}
            </sw-button>
                    </template>
</sw-modal>
"
`;

exports[`the compiled template should stay the same even after removing duplicate blocks sw-tree-item 1`] = `
"<div
    class=\\"sw-tree-item\\"
    :class=\\"styling\\"
>

        <div
        v-droppable=\\"{ dragGroup: 'sw-tree-item', data: item }\\"
        v-draggable=\\"dragConf\\"
        class=\\"sw-tree-item__element\\"
    >

                <div
            v-if=\\"item.childCount <= 0\\"
            class=\\"sw-tree-item__leaf\\"
        ></div>
        
                <div
            v-else
            class=\\"sw-tree-item__toggle\\"
            @click=\\"openTreeItem(); getTreeItemChildren(item)\\"
        >

                        <sw-loader
                v-if=\\"isLoading\\"
                size=\\"14\\"
            />
            
                        <sw-icon
                v-else
                :name=\\"opened ? 'small-arrow-small-down' : 'small-arrow-small-right'\\"
                size=\\"18\\"
            />
                    </div>
        
                <div class=\\"sw-tree-item__selection\\">
            <sw-checkbox-field
                v-if=\\"displayCheckbox\\"
                :disabled=\\"currentEditElement === item.data.id\\"
                :ghost-value=\\"checkedGhost\\"
                :value=\\"checked\\"
                @change=\\"toggleItemCheck($event, item)\\"
            />
        </div>
        
                <slot name=\\"grip\\">
            <div
                v-if=\\"item.childCount > 0\\"
                class=\\"sw-tree-item__icon\\"
            >
                <sw-icon
                    v-if=\\"opened\\"
                    name=\\"multicolor-folder-tree-open\\"
                    multicolor
                    small
                />
                <sw-icon
                    v-else
                    name=\\"multicolor-folder-tree\\"
                    multicolor
                    small
                />
            </div>
            <div
                v-else
                class=\\"sw-tree-item__icon\\"
            >
                <sw-icon
                    name=\\"small-default-circle-small\\"
                    size=\\"18\\"
                />
            </div>
        </slot>
        
                <div
            ref=\\"item\\"
            class=\\"sw-tree-item__content\\"
        >
            <slot
                name=\\"content\\"
                v-bind=\\"{ item, openTreeItem, getName }\\"
            >

                                <template v-if=\\"currentEditElement === item.data.id\\">
                    <sw-confirm-field
                        v-model=\\"item.data.name\\"
                        class=\\"sw-tree-detail__edit-tree-item\\"
                        :prevent-empty-submit=\\"true\\"
                        :placeholder=\\"$tc(\`\${translationContext}.general.buttonCreate\`)\\"
                        @input=\\"onFinishNameingElement\\"
                        @blur=\\"onCancelSubmit(item)\\"
                        @submit-cancel=\\"onBlurTreeItemInput(item)\\"
                    />
                </template>
                
                                <template v-else>
                    <a
                        v-if=\\"onChangeRoute\\"
                        class=\\"tree-link\\"
                        :href=\\"showItemUrl(item)\\"
                        @click.prevent=\\"onChangeRoute(item)\\"
                    >
                        <span class=\\"sw-tree-item__label\\">{{ getName(item) }}</span>
                    </a>
                    <span
                        v-else
                        class=\\"sw-tree-item__label\\"
                    >{{ getName(item) }}</span>
                </template>
                            </slot>
        </div>
        
                <div class=\\"sw-tree-item__actions\\">

                        <sw-icon
                v-if=\\"shouldShowActiveState\\"
                size=\\"6\\"
                :color=\\"getActiveIconColor(item)\\"
                name=\\"default-basic-shape-circle-filled\\"
            />
            
            <slot
                name=\\"actions\\"
                :item=\\"item\\"
                :openTreeItem=\\"openTreeItem\\"
                :addElement=\\"addElement\\"
                :addSubElement=\\"addSubElement\\"
                :onDuplicate=\\"onDuplicate\\"
                :onChangeRoute=\\"onChangeRoute\\"
                :deleteElement=\\"deleteElement\\"
                :toolTip=\\"toolTip\\"
                :isDisabled=\\"isDisabled\\"
            >
                <sw-context-button
                    v-tooltip=\\"toolTip\\"
                    class=\\"sw-tree-item__context_button\\"
                    :disabled=\\"isDisabled\\"
                >

                                        <sw-context-menu-item
                        v-if=\\"allowCreateWithoutPosition\\"
                        class=\\"sw-tree-item__without-position-action\\"
                        @click=\\"addElement(item)\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.withoutPosition\`) }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__before-action\\"
                        @click=\\"addElement(item, 'before')\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createBefore\`) }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__after-action\\"
                        @click=\\"addElement(item, 'after')\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createAfter\`) }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__sub-action\\"
                        @click=\\"addSubElement(item); openTreeItem(true)\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createSub\`) }}
                    </sw-context-menu-item>
                    
                                        <sw-context-menu-item
                        v-if=\\"allowDuplicate\\"
                        class=\\"sw-context-menu__duplicate-action\\"
                        @click=\\"onDuplicate(item)\\"
                    >
                        {{ $tc(\`global.default.duplicate\`) }}
                    </sw-context-menu-item>
                    
                                        <div class=\\"sw-context-menu__group\\">

                                                <sw-context-menu-item @click=\\"onChangeRoute(item)\\">
                            {{ $tc('global.default.edit') }}
                        </sw-context-menu-item>
                        
                                                <sw-context-menu-item
                            class=\\"sw-context-menu__group-button-delete\\"
                            :disabled=\\"!allowDeleteCategories\\"
                            variant=\\"danger\\"
                            @click=\\"deleteElement(item)\\"
                        >
                            {{ $tc('global.default.delete') }}
                        </sw-context-menu-item>
                                            </div>
                                    </sw-context-button>
            </slot>
        </div>
            </div>
    
    
        <transition name=\\"fade\\">

                <div
            v-if=\\"isOpened && item.children.length > 0\\"
            class=\\"sw-tree-item__children\\"
        >

                        <sw-tree-item
                v-for=\\"child in item.children\\"
                :key=\\"child.id\\"
                :item=\\"child\\"
                :dragged-item=\\"draggedItem\\"
                :parent-scope=\\"parentScope\\"
                :new-element-id=\\"newElementId\\"
                :translation-context=\\"translationContext\\"
                :on-change-route=\\"onChangeRoute\\"
                :active-parent-ids=\\"activeParentIds\\"
                :active-item-ids=\\"activeItemIds\\"
                :mark-inactive=\\"markInactive\\"
                :sortable=\\"sortable\\"
                :should-focus=\\"shouldFocus\\"
                :active-focus-id=\\"activeFocusId\\"
                :display-checkbox=\\"displayCheckbox\\"
                :disable-context-menu=\\"disableContextMenu\\"
                :get-is-highlighted=\\"getIsHighlighted\\"
                @check-item=\\"emitCheckedItem\\"
            >

                                <template #content=\\"{ item, openTreeItem, getName: innerGetName }\\">

                                        <sw-vnode-renderer
                        v-if=\\"$scopedSlots.content\\"
                        :node=\\"$scopedSlots.content({ item, openTreeItem, getName })\\"
                    />

                                        <template v-else>

                                                <template v-if=\\"currentEditElement === item.data.id\\">
                            <sw-confirm-field
                                v-model=\\"item.data.name\\"
                                class=\\"sw-tree-detail__edit-tree-item\\"
                                :prevent-empty-submit=\\"true\\"
                                :placeholder=\\"$tc(\`\${translationContext}.general.buttonCreate\`)\\"
                                @input=\\"onFinishNameingElement\\"
                                @blur=\\"onBlurTreeItemInput(item)\\"
                                @submit-cancel=\\"onCancelSubmit(item)\\"
                            />
                        </template>
                        
                                                <template v-else>
                            <a
                                v-if=\\"onChangeRoute\\"
                                class=\\"tree-link\\"
                                :href=\\"showItemUrl(item)\\"
                                @click.prevent=\\"onChangeRoute(item)\\"
                            >
                                <span class=\\"sw-tree-item__label\\">{{ getName(item) }}</span>
                            </a>
                            <span
                                v-else
                                class=\\"sw-tree-item__label\\"
                            >{{ getName(item) }}</span>
                        </template>
                                            </template>
                                                        </template>

                <template #actions=\\"{ item, openTreeItem }\\">

                                        <sw-vnode-renderer
                        v-if=\\"$scopedSlots.actions\\"
                        :node=\\"$scopedSlots.actions({ item, openTreeItem })\\"
                    />
                    <div
                        v-else
                        class=\\"sw-tree-item__actions\\"
                    >

                                    <sw-icon
                v-if=\\"shouldShowActiveState\\"
                size=\\"6\\"
                :color=\\"getActiveIconColor(item)\\"
                name=\\"default-basic-shape-circle-filled\\"
            />
            
                        <slot
                            name=\\"actions\\"
                            :item=\\"item\\"
                            :openTreeItem=\\"openTreeItem\\"
                            :addElement=\\"addElement\\"
                            :addSubElement=\\"addSubElement\\"
                            :onDuplicate=\\"onDuplicate\\"
                            :onChangeRoute=\\"onChangeRoute\\"
                            :deleteElement=\\"deleteElement\\"
                            :toolTip=\\"toolTip\\"
                            :isDisabled=\\"isDisabled\\"
                        >
                            <sw-context-button
                                v-tooltip=\\"toolTip\\"
                                :disabled=\\"isDisabled\\"
                            >

                                                    <sw-context-menu-item
                        v-if=\\"allowCreateWithoutPosition\\"
                        class=\\"sw-tree-item__without-position-action\\"
                        @click=\\"addElement(item)\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.withoutPosition\`) }}
                    </sw-context-menu-item>
                    
                                                    <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__before-action\\"
                        @click=\\"addElement(item, 'before')\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createBefore\`) }}
                    </sw-context-menu-item>
                                
                                                    <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__after-action\\"
                        @click=\\"addElement(item, 'after')\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createAfter\`) }}
                    </sw-context-menu-item>
                                
                                                    <sw-context-menu-item
                        v-if=\\"!allowCreateWithoutPosition\\"
                        :disabled=\\"!allowNewCategories\\"
                        class=\\"sw-tree-item__sub-action\\"
                        @click=\\"addSubElement(item); openTreeItem(true)\\"
                    >
                        {{ $tc(\`\${translationContext}.general.actions.createSub\`) }}
                    </sw-context-menu-item>
                                
                                                    <sw-context-menu-item
                        v-if=\\"allowDuplicate\\"
                        class=\\"sw-context-menu__duplicate-action\\"
                        @click=\\"onDuplicate(item)\\"
                    >
                        {{ $tc(\`global.default.duplicate\`) }}
                    </sw-context-menu-item>
                                
                                                    <div class=\\"sw-context-menu__group\\">

                                                <sw-context-menu-item @click=\\"onChangeRoute(item)\\">
                            {{ $tc('global.default.edit') }}
                        </sw-context-menu-item>
                        
                                                <sw-context-menu-item
                            class=\\"sw-context-menu__group-button-delete\\"
                            :disabled=\\"!allowDeleteCategories\\"
                            variant=\\"danger\\"
                            @click=\\"deleteElement(item)\\"
                        >
                            {{ $tc('global.default.delete') }}
                        </sw-context-menu-item>
                                            </div>
                                                </sw-context-button>
                        </slot>
                    </div>
                                    </template>
                            </sw-tree-item>
                    </div>
            </transition>
    </div>
"
`;
